
Udemy_Series.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000820  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000004  080009c8  080009c8  000109c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080009cc  080009cc  0002042c  2**0
                  CONTENTS
  4 .ARM          00000000  080009cc  080009cc  0002042c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080009cc  080009cc  0002042c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  080009cc  080009cc  000109cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080009d4  080009d4  000109d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000042c  20000000  080009d8  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002042c  2**0
                  CONTENTS
 10 .bss          00000028  2000042c  2000042c  0002042c  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000454  20000454  0002042c  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  0002042c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00001242  00000000  00000000  00020456  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000030a  00000000  00000000  00021698  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000b8  00000000  00000000  000219a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000090  00000000  00000000  00021a60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002294  00000000  00000000  00021af0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000f43  00000000  00000000  00023d84  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00008ed3  00000000  00000000  00024cc7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  0002db9a  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000003b8  00000000  00000000  0002dbf0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	2000042c 	.word	0x2000042c
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080009b0 	.word	0x080009b0

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000430 	.word	0x20000430
 80001e4:	080009b0 	.word	0x080009b0

080001e8 <GPIO_Pclk_Ctrl>:
 *
 * @return            -  none
 *
 * @Note              -  none
 */
void GPIO_Pclk_Ctrl(GPIO_RegDef_t *pGPIOx,uint8_t EnorDi){
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	6078      	str	r0, [r7, #4]
 80001f0:	460b      	mov	r3, r1
 80001f2:	70fb      	strb	r3, [r7, #3]

	if(EnorDi==ENABLE){
 80001f4:	78fb      	ldrb	r3, [r7, #3]
 80001f6:	2b01      	cmp	r3, #1
 80001f8:	d161      	bne.n	80002be <GPIO_Pclk_Ctrl+0xd6>

		if(pGPIOx==GPIOA){GPIOA_PCLK_EN();}
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a32      	ldr	r2, [pc, #200]	; (80002c8 <GPIO_Pclk_Ctrl+0xe0>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d106      	bne.n	8000210 <GPIO_Pclk_Ctrl+0x28>
 8000202:	4b32      	ldr	r3, [pc, #200]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 8000204:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000206:	4a31      	ldr	r2, [pc, #196]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 8000208:	f043 0301 	orr.w	r3, r3, #1
 800020c:	6313      	str	r3, [r2, #48]	; 0x30
	}
	else
	{
	}

}
 800020e:	e056      	b.n	80002be <GPIO_Pclk_Ctrl+0xd6>
		else if(pGPIOx==GPIOB){GPIOB_PCLK_EN();}
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	4a2f      	ldr	r2, [pc, #188]	; (80002d0 <GPIO_Pclk_Ctrl+0xe8>)
 8000214:	4293      	cmp	r3, r2
 8000216:	d106      	bne.n	8000226 <GPIO_Pclk_Ctrl+0x3e>
 8000218:	4b2c      	ldr	r3, [pc, #176]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 800021a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800021c:	4a2b      	ldr	r2, [pc, #172]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 800021e:	f043 0302 	orr.w	r3, r3, #2
 8000222:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000224:	e04b      	b.n	80002be <GPIO_Pclk_Ctrl+0xd6>
		else if(pGPIOx==GPIOC){GPIOC_PCLK_EN();}
 8000226:	687b      	ldr	r3, [r7, #4]
 8000228:	4a2a      	ldr	r2, [pc, #168]	; (80002d4 <GPIO_Pclk_Ctrl+0xec>)
 800022a:	4293      	cmp	r3, r2
 800022c:	d106      	bne.n	800023c <GPIO_Pclk_Ctrl+0x54>
 800022e:	4b27      	ldr	r3, [pc, #156]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 8000230:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000232:	4a26      	ldr	r2, [pc, #152]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 8000234:	f043 0304 	orr.w	r3, r3, #4
 8000238:	6313      	str	r3, [r2, #48]	; 0x30
}
 800023a:	e040      	b.n	80002be <GPIO_Pclk_Ctrl+0xd6>
		else if(pGPIOx==GPIOD){GPIOD_PCLK_EN();}
 800023c:	687b      	ldr	r3, [r7, #4]
 800023e:	4a26      	ldr	r2, [pc, #152]	; (80002d8 <GPIO_Pclk_Ctrl+0xf0>)
 8000240:	4293      	cmp	r3, r2
 8000242:	d106      	bne.n	8000252 <GPIO_Pclk_Ctrl+0x6a>
 8000244:	4b21      	ldr	r3, [pc, #132]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 8000246:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000248:	4a20      	ldr	r2, [pc, #128]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 800024a:	f043 0308 	orr.w	r3, r3, #8
 800024e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000250:	e035      	b.n	80002be <GPIO_Pclk_Ctrl+0xd6>
		else if(pGPIOx==GPIOE){GPIOE_PCLK_EN();}
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	4a21      	ldr	r2, [pc, #132]	; (80002dc <GPIO_Pclk_Ctrl+0xf4>)
 8000256:	4293      	cmp	r3, r2
 8000258:	d106      	bne.n	8000268 <GPIO_Pclk_Ctrl+0x80>
 800025a:	4b1c      	ldr	r3, [pc, #112]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 800025c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800025e:	4a1b      	ldr	r2, [pc, #108]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 8000260:	f043 0310 	orr.w	r3, r3, #16
 8000264:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000266:	e02a      	b.n	80002be <GPIO_Pclk_Ctrl+0xd6>
		else if(pGPIOx==GPIOF){GPIOF_PCLK_EN();}
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	4a1d      	ldr	r2, [pc, #116]	; (80002e0 <GPIO_Pclk_Ctrl+0xf8>)
 800026c:	4293      	cmp	r3, r2
 800026e:	d106      	bne.n	800027e <GPIO_Pclk_Ctrl+0x96>
 8000270:	4b16      	ldr	r3, [pc, #88]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 8000272:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000274:	4a15      	ldr	r2, [pc, #84]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 8000276:	f043 0320 	orr.w	r3, r3, #32
 800027a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800027c:	e01f      	b.n	80002be <GPIO_Pclk_Ctrl+0xd6>
		else if(pGPIOx==GPIOG){GPIOG_PCLK_EN();}
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	4a18      	ldr	r2, [pc, #96]	; (80002e4 <GPIO_Pclk_Ctrl+0xfc>)
 8000282:	4293      	cmp	r3, r2
 8000284:	d106      	bne.n	8000294 <GPIO_Pclk_Ctrl+0xac>
 8000286:	4b11      	ldr	r3, [pc, #68]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 8000288:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028a:	4a10      	ldr	r2, [pc, #64]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 800028c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000290:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000292:	e014      	b.n	80002be <GPIO_Pclk_Ctrl+0xd6>
		else if(pGPIOx==GPIOH){GPIOH_PCLK_EN();}
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	4a14      	ldr	r2, [pc, #80]	; (80002e8 <GPIO_Pclk_Ctrl+0x100>)
 8000298:	4293      	cmp	r3, r2
 800029a:	d106      	bne.n	80002aa <GPIO_Pclk_Ctrl+0xc2>
 800029c:	4b0b      	ldr	r3, [pc, #44]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 800029e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a0:	4a0a      	ldr	r2, [pc, #40]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 80002a2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002a8:	e009      	b.n	80002be <GPIO_Pclk_Ctrl+0xd6>
		else if(pGPIOx==GPIOI){GPIOI_PCLK_EN();}
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	4a0f      	ldr	r2, [pc, #60]	; (80002ec <GPIO_Pclk_Ctrl+0x104>)
 80002ae:	4293      	cmp	r3, r2
 80002b0:	d105      	bne.n	80002be <GPIO_Pclk_Ctrl+0xd6>
 80002b2:	4b06      	ldr	r3, [pc, #24]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 80002b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b6:	4a05      	ldr	r2, [pc, #20]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 80002b8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002bc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002be:	bf00      	nop
 80002c0:	370c      	adds	r7, #12
 80002c2:	46bd      	mov	sp, r7
 80002c4:	bc80      	pop	{r7}
 80002c6:	4770      	bx	lr
 80002c8:	40020000 	.word	0x40020000
 80002cc:	40023800 	.word	0x40023800
 80002d0:	40020400 	.word	0x40020400
 80002d4:	40020800 	.word	0x40020800
 80002d8:	40020c00 	.word	0x40020c00
 80002dc:	40021000 	.word	0x40021000
 80002e0:	40021400 	.word	0x40021400
 80002e4:	40021800 	.word	0x40021800
 80002e8:	40021c00 	.word	0x40021c00
 80002ec:	40022000 	.word	0x40022000

080002f0 <GPIO_Init>:
 *
 * @return            -  none
 *
 * @Note              -  none
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 80002f0:	b480      	push	{r7}
 80002f2:	b085      	sub	sp, #20
 80002f4:	af00      	add	r7, sp, #0
 80002f6:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 80002f8:	2300      	movs	r3, #0
 80002fa:	60fb      	str	r3, [r7, #12]
	//1 . configure the mode of gpio pin

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode <=GPIO_MODE_ANALOG){
 80002fc:	687b      	ldr	r3, [r7, #4]
 80002fe:	7a5b      	ldrb	r3, [r3, #9]
 8000300:	2b03      	cmp	r3, #3
 8000302:	d820      	bhi.n	8000346 <GPIO_Init+0x56>
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	795b      	ldrb	r3, [r3, #5]
 8000308:	461a      	mov	r2, r3
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	791b      	ldrb	r3, [r3, #4]
 800030e:	005b      	lsls	r3, r3, #1
 8000310:	fa02 f303 	lsl.w	r3, r2, r3
 8000314:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	681b      	ldr	r3, [r3, #0]
 800031a:	681a      	ldr	r2, [r3, #0]
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	791b      	ldrb	r3, [r3, #4]
 8000320:	005b      	lsls	r3, r3, #1
 8000322:	2103      	movs	r1, #3
 8000324:	fa01 f303 	lsl.w	r3, r1, r3
 8000328:	43db      	mvns	r3, r3
 800032a:	4619      	mov	r1, r3
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	681b      	ldr	r3, [r3, #0]
 8000330:	400a      	ands	r2, r1
 8000332:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |=temp;
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	681b      	ldr	r3, [r3, #0]
 8000338:	6819      	ldr	r1, [r3, #0]
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	681b      	ldr	r3, [r3, #0]
 800033e:	68fa      	ldr	r2, [r7, #12]
 8000340:	430a      	orrs	r2, r1
 8000342:	601a      	str	r2, [r3, #0]
 8000344:	e0d2      	b.n	80004ec <GPIO_Init+0x1fc>
	}
	else{

		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_FT){
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	795b      	ldrb	r3, [r3, #5]
 800034a:	2b04      	cmp	r3, #4
 800034c:	d117      	bne.n	800037e <GPIO_Init+0x8e>
			//1.configure the FTSR
			EXTI->FTSR |=(1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800034e:	4b4b      	ldr	r3, [pc, #300]	; (800047c <GPIO_Init+0x18c>)
 8000350:	68db      	ldr	r3, [r3, #12]
 8000352:	687a      	ldr	r2, [r7, #4]
 8000354:	7912      	ldrb	r2, [r2, #4]
 8000356:	4611      	mov	r1, r2
 8000358:	2201      	movs	r2, #1
 800035a:	408a      	lsls	r2, r1
 800035c:	4611      	mov	r1, r2
 800035e:	4a47      	ldr	r2, [pc, #284]	; (800047c <GPIO_Init+0x18c>)
 8000360:	430b      	orrs	r3, r1
 8000362:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &=~(1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000364:	4b45      	ldr	r3, [pc, #276]	; (800047c <GPIO_Init+0x18c>)
 8000366:	689b      	ldr	r3, [r3, #8]
 8000368:	687a      	ldr	r2, [r7, #4]
 800036a:	7912      	ldrb	r2, [r2, #4]
 800036c:	4611      	mov	r1, r2
 800036e:	2201      	movs	r2, #1
 8000370:	408a      	lsls	r2, r1
 8000372:	43d2      	mvns	r2, r2
 8000374:	4611      	mov	r1, r2
 8000376:	4a41      	ldr	r2, [pc, #260]	; (800047c <GPIO_Init+0x18c>)
 8000378:	400b      	ands	r3, r1
 800037a:	6093      	str	r3, [r2, #8]
 800037c:	e035      	b.n	80003ea <GPIO_Init+0xfa>

		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_RT){
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	795b      	ldrb	r3, [r3, #5]
 8000382:	2b05      	cmp	r3, #5
 8000384:	d117      	bne.n	80003b6 <GPIO_Init+0xc6>

			//1.configure the RTSR
			EXTI->RTSR |=(1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000386:	4b3d      	ldr	r3, [pc, #244]	; (800047c <GPIO_Init+0x18c>)
 8000388:	689b      	ldr	r3, [r3, #8]
 800038a:	687a      	ldr	r2, [r7, #4]
 800038c:	7912      	ldrb	r2, [r2, #4]
 800038e:	4611      	mov	r1, r2
 8000390:	2201      	movs	r2, #1
 8000392:	408a      	lsls	r2, r1
 8000394:	4611      	mov	r1, r2
 8000396:	4a39      	ldr	r2, [pc, #228]	; (800047c <GPIO_Init+0x18c>)
 8000398:	430b      	orrs	r3, r1
 800039a:	6093      	str	r3, [r2, #8]
			EXTI->FTSR &=~(1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800039c:	4b37      	ldr	r3, [pc, #220]	; (800047c <GPIO_Init+0x18c>)
 800039e:	68db      	ldr	r3, [r3, #12]
 80003a0:	687a      	ldr	r2, [r7, #4]
 80003a2:	7912      	ldrb	r2, [r2, #4]
 80003a4:	4611      	mov	r1, r2
 80003a6:	2201      	movs	r2, #1
 80003a8:	408a      	lsls	r2, r1
 80003aa:	43d2      	mvns	r2, r2
 80003ac:	4611      	mov	r1, r2
 80003ae:	4a33      	ldr	r2, [pc, #204]	; (800047c <GPIO_Init+0x18c>)
 80003b0:	400b      	ands	r3, r1
 80003b2:	60d3      	str	r3, [r2, #12]
 80003b4:	e019      	b.n	80003ea <GPIO_Init+0xfa>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_RFT){
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	795b      	ldrb	r3, [r3, #5]
 80003ba:	2b06      	cmp	r3, #6
 80003bc:	d115      	bne.n	80003ea <GPIO_Init+0xfa>

			//1.configure the both FTSR and RTSR
			EXTI->RTSR |=(1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003be:	4b2f      	ldr	r3, [pc, #188]	; (800047c <GPIO_Init+0x18c>)
 80003c0:	689b      	ldr	r3, [r3, #8]
 80003c2:	687a      	ldr	r2, [r7, #4]
 80003c4:	7912      	ldrb	r2, [r2, #4]
 80003c6:	4611      	mov	r1, r2
 80003c8:	2201      	movs	r2, #1
 80003ca:	408a      	lsls	r2, r1
 80003cc:	4611      	mov	r1, r2
 80003ce:	4a2b      	ldr	r2, [pc, #172]	; (800047c <GPIO_Init+0x18c>)
 80003d0:	430b      	orrs	r3, r1
 80003d2:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |=(1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003d4:	4b29      	ldr	r3, [pc, #164]	; (800047c <GPIO_Init+0x18c>)
 80003d6:	68db      	ldr	r3, [r3, #12]
 80003d8:	687a      	ldr	r2, [r7, #4]
 80003da:	7912      	ldrb	r2, [r2, #4]
 80003dc:	4611      	mov	r1, r2
 80003de:	2201      	movs	r2, #1
 80003e0:	408a      	lsls	r2, r1
 80003e2:	4611      	mov	r1, r2
 80003e4:	4a25      	ldr	r2, [pc, #148]	; (800047c <GPIO_Init+0x18c>)
 80003e6:	430b      	orrs	r3, r1
 80003e8:	60d3      	str	r3, [r2, #12]
		}

	//2.configure the GPIO port selection in SYSCFG_EXTIRC

		uint8_t temp1=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4 ;
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	791b      	ldrb	r3, [r3, #4]
 80003ee:	089b      	lsrs	r3, r3, #2
 80003f0:	72fb      	strb	r3, [r7, #11]
		uint8_t temp2=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	791b      	ldrb	r3, [r3, #4]
 80003f6:	f003 0303 	and.w	r3, r3, #3
 80003fa:	72bb      	strb	r3, [r7, #10]
		uint8_t portcode =GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	681b      	ldr	r3, [r3, #0]
 8000400:	4a1f      	ldr	r2, [pc, #124]	; (8000480 <GPIO_Init+0x190>)
 8000402:	4293      	cmp	r3, r2
 8000404:	d04e      	beq.n	80004a4 <GPIO_Init+0x1b4>
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	681b      	ldr	r3, [r3, #0]
 800040a:	4a1e      	ldr	r2, [pc, #120]	; (8000484 <GPIO_Init+0x194>)
 800040c:	4293      	cmp	r3, r2
 800040e:	d032      	beq.n	8000476 <GPIO_Init+0x186>
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	4a1c      	ldr	r2, [pc, #112]	; (8000488 <GPIO_Init+0x198>)
 8000416:	4293      	cmp	r3, r2
 8000418:	d02b      	beq.n	8000472 <GPIO_Init+0x182>
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	681b      	ldr	r3, [r3, #0]
 800041e:	4a1b      	ldr	r2, [pc, #108]	; (800048c <GPIO_Init+0x19c>)
 8000420:	4293      	cmp	r3, r2
 8000422:	d024      	beq.n	800046e <GPIO_Init+0x17e>
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	681b      	ldr	r3, [r3, #0]
 8000428:	4a19      	ldr	r2, [pc, #100]	; (8000490 <GPIO_Init+0x1a0>)
 800042a:	4293      	cmp	r3, r2
 800042c:	d01d      	beq.n	800046a <GPIO_Init+0x17a>
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	4a18      	ldr	r2, [pc, #96]	; (8000494 <GPIO_Init+0x1a4>)
 8000434:	4293      	cmp	r3, r2
 8000436:	d016      	beq.n	8000466 <GPIO_Init+0x176>
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	681b      	ldr	r3, [r3, #0]
 800043c:	4a16      	ldr	r2, [pc, #88]	; (8000498 <GPIO_Init+0x1a8>)
 800043e:	4293      	cmp	r3, r2
 8000440:	d00f      	beq.n	8000462 <GPIO_Init+0x172>
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	681b      	ldr	r3, [r3, #0]
 8000446:	4a15      	ldr	r2, [pc, #84]	; (800049c <GPIO_Init+0x1ac>)
 8000448:	4293      	cmp	r3, r2
 800044a:	d008      	beq.n	800045e <GPIO_Init+0x16e>
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	681b      	ldr	r3, [r3, #0]
 8000450:	4a13      	ldr	r2, [pc, #76]	; (80004a0 <GPIO_Init+0x1b0>)
 8000452:	4293      	cmp	r3, r2
 8000454:	d101      	bne.n	800045a <GPIO_Init+0x16a>
 8000456:	2308      	movs	r3, #8
 8000458:	e025      	b.n	80004a6 <GPIO_Init+0x1b6>
 800045a:	2300      	movs	r3, #0
 800045c:	e023      	b.n	80004a6 <GPIO_Init+0x1b6>
 800045e:	2307      	movs	r3, #7
 8000460:	e021      	b.n	80004a6 <GPIO_Init+0x1b6>
 8000462:	2306      	movs	r3, #6
 8000464:	e01f      	b.n	80004a6 <GPIO_Init+0x1b6>
 8000466:	2305      	movs	r3, #5
 8000468:	e01d      	b.n	80004a6 <GPIO_Init+0x1b6>
 800046a:	2304      	movs	r3, #4
 800046c:	e01b      	b.n	80004a6 <GPIO_Init+0x1b6>
 800046e:	2303      	movs	r3, #3
 8000470:	e019      	b.n	80004a6 <GPIO_Init+0x1b6>
 8000472:	2302      	movs	r3, #2
 8000474:	e017      	b.n	80004a6 <GPIO_Init+0x1b6>
 8000476:	2301      	movs	r3, #1
 8000478:	e015      	b.n	80004a6 <GPIO_Init+0x1b6>
 800047a:	bf00      	nop
 800047c:	40013c00 	.word	0x40013c00
 8000480:	40020000 	.word	0x40020000
 8000484:	40020400 	.word	0x40020400
 8000488:	40020800 	.word	0x40020800
 800048c:	40020c00 	.word	0x40020c00
 8000490:	40021000 	.word	0x40021000
 8000494:	40021400 	.word	0x40021400
 8000498:	40021800 	.word	0x40021800
 800049c:	40021c00 	.word	0x40021c00
 80004a0:	40022000 	.word	0x40022000
 80004a4:	2300      	movs	r3, #0
 80004a6:	727b      	strb	r3, [r7, #9]
		SYSCFG_PCLK_EN();
 80004a8:	4b6c      	ldr	r3, [pc, #432]	; (800065c <GPIO_Init+0x36c>)
 80004aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80004ac:	4a6b      	ldr	r2, [pc, #428]	; (800065c <GPIO_Init+0x36c>)
 80004ae:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80004b2:	6453      	str	r3, [r2, #68]	; 0x44

		SYSCFG->EXTICR[temp1] |=  portcode <<(4 * temp2);
 80004b4:	4a6a      	ldr	r2, [pc, #424]	; (8000660 <GPIO_Init+0x370>)
 80004b6:	7afb      	ldrb	r3, [r7, #11]
 80004b8:	3302      	adds	r3, #2
 80004ba:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80004be:	7a79      	ldrb	r1, [r7, #9]
 80004c0:	7abb      	ldrb	r3, [r7, #10]
 80004c2:	009b      	lsls	r3, r3, #2
 80004c4:	fa01 f303 	lsl.w	r3, r1, r3
 80004c8:	4618      	mov	r0, r3
 80004ca:	4965      	ldr	r1, [pc, #404]	; (8000660 <GPIO_Init+0x370>)
 80004cc:	7afb      	ldrb	r3, [r7, #11]
 80004ce:	4302      	orrs	r2, r0
 80004d0:	3302      	adds	r3, #2
 80004d2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]




	//3.enable the EXTI interrupt delivery using IMR (interrupt mask register)
	EXTI->IMR |= (1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004d6:	4b63      	ldr	r3, [pc, #396]	; (8000664 <GPIO_Init+0x374>)
 80004d8:	681b      	ldr	r3, [r3, #0]
 80004da:	687a      	ldr	r2, [r7, #4]
 80004dc:	7912      	ldrb	r2, [r2, #4]
 80004de:	4611      	mov	r1, r2
 80004e0:	2201      	movs	r2, #1
 80004e2:	408a      	lsls	r2, r1
 80004e4:	4611      	mov	r1, r2
 80004e6:	4a5f      	ldr	r2, [pc, #380]	; (8000664 <GPIO_Init+0x374>)
 80004e8:	430b      	orrs	r3, r1
 80004ea:	6013      	str	r3, [r2, #0]



	}

	temp=0;
 80004ec:	2300      	movs	r3, #0
 80004ee:	60fb      	str	r3, [r7, #12]
	//2. configure the speed
	temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	799b      	ldrb	r3, [r3, #6]
 80004f4:	461a      	mov	r2, r3
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	791b      	ldrb	r3, [r3, #4]
 80004fa:	005b      	lsls	r3, r3, #1
 80004fc:	fa02 f303 	lsl.w	r3, r2, r3
 8000500:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	681b      	ldr	r3, [r3, #0]
 8000506:	689a      	ldr	r2, [r3, #8]
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	791b      	ldrb	r3, [r3, #4]
 800050c:	005b      	lsls	r3, r3, #1
 800050e:	2103      	movs	r1, #3
 8000510:	fa01 f303 	lsl.w	r3, r1, r3
 8000514:	43db      	mvns	r3, r3
 8000516:	4619      	mov	r1, r3
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	681b      	ldr	r3, [r3, #0]
 800051c:	400a      	ands	r2, r1
 800051e:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |=temp;
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	681b      	ldr	r3, [r3, #0]
 8000524:	6899      	ldr	r1, [r3, #8]
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	681b      	ldr	r3, [r3, #0]
 800052a:	68fa      	ldr	r2, [r7, #12]
 800052c:	430a      	orrs	r2, r1
 800052e:	609a      	str	r2, [r3, #8]
	temp=0;
 8000530:	2300      	movs	r3, #0
 8000532:	60fb      	str	r3, [r7, #12]
	//3. configure the pupd settings
	temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	79db      	ldrb	r3, [r3, #7]
 8000538:	461a      	mov	r2, r3
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	791b      	ldrb	r3, [r3, #4]
 800053e:	005b      	lsls	r3, r3, #1
 8000540:	fa02 f303 	lsl.w	r3, r2, r3
 8000544:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	681b      	ldr	r3, [r3, #0]
 800054a:	68da      	ldr	r2, [r3, #12]
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	791b      	ldrb	r3, [r3, #4]
 8000550:	005b      	lsls	r3, r3, #1
 8000552:	2103      	movs	r1, #3
 8000554:	fa01 f303 	lsl.w	r3, r1, r3
 8000558:	43db      	mvns	r3, r3
 800055a:	4619      	mov	r1, r3
 800055c:	687b      	ldr	r3, [r7, #4]
 800055e:	681b      	ldr	r3, [r3, #0]
 8000560:	400a      	ands	r2, r1
 8000562:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |=temp;
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	681b      	ldr	r3, [r3, #0]
 8000568:	68d9      	ldr	r1, [r3, #12]
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	681b      	ldr	r3, [r3, #0]
 800056e:	68fa      	ldr	r2, [r7, #12]
 8000570:	430a      	orrs	r2, r1
 8000572:	60da      	str	r2, [r3, #12]
	temp=0;
 8000574:	2300      	movs	r3, #0
 8000576:	60fb      	str	r3, [r7, #12]

	//4. configure the optype
	temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000578:	687b      	ldr	r3, [r7, #4]
 800057a:	7a1b      	ldrb	r3, [r3, #8]
 800057c:	461a      	mov	r2, r3
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	791b      	ldrb	r3, [r3, #4]
 8000582:	fa02 f303 	lsl.w	r3, r2, r3
 8000586:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	681b      	ldr	r3, [r3, #0]
 800058c:	685a      	ldr	r2, [r3, #4]
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	791b      	ldrb	r3, [r3, #4]
 8000592:	005b      	lsls	r3, r3, #1
 8000594:	2103      	movs	r1, #3
 8000596:	fa01 f303 	lsl.w	r3, r1, r3
 800059a:	43db      	mvns	r3, r3
 800059c:	4619      	mov	r1, r3
 800059e:	687b      	ldr	r3, [r7, #4]
 80005a0:	681b      	ldr	r3, [r3, #0]
 80005a2:	400a      	ands	r2, r1
 80005a4:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |=temp;
 80005a6:	687b      	ldr	r3, [r7, #4]
 80005a8:	681b      	ldr	r3, [r3, #0]
 80005aa:	6859      	ldr	r1, [r3, #4]
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	681b      	ldr	r3, [r3, #0]
 80005b0:	68fa      	ldr	r2, [r7, #12]
 80005b2:	430a      	orrs	r2, r1
 80005b4:	605a      	str	r2, [r3, #4]
	temp=0;
 80005b6:	2300      	movs	r3, #0
 80005b8:	60fb      	str	r3, [r7, #12]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode <=GPIO_MODE_ALTFN){
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	7a5b      	ldrb	r3, [r3, #9]
 80005be:	2b02      	cmp	r3, #2
 80005c0:	d846      	bhi.n	8000650 <GPIO_Init+0x360>

		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber <= 7){
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	791b      	ldrb	r3, [r3, #4]
 80005c6:	2b07      	cmp	r3, #7
 80005c8:	d81f      	bhi.n	800060a <GPIO_Init+0x31a>
			pGPIOHandle->pGPIOx->AFR[0]  &= ~( 0xF << (4 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	681b      	ldr	r3, [r3, #0]
 80005ce:	6a1a      	ldr	r2, [r3, #32]
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	791b      	ldrb	r3, [r3, #4]
 80005d4:	009b      	lsls	r3, r3, #2
 80005d6:	210f      	movs	r1, #15
 80005d8:	fa01 f303 	lsl.w	r3, r1, r3
 80005dc:	43db      	mvns	r3, r3
 80005de:	4619      	mov	r1, r3
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	400a      	ands	r2, r1
 80005e6:	621a      	str	r2, [r3, #32]
			pGPIOHandle->pGPIOx->AFR[0] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 *pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	681b      	ldr	r3, [r3, #0]
 80005ec:	6a1a      	ldr	r2, [r3, #32]
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	7a5b      	ldrb	r3, [r3, #9]
 80005f2:	4619      	mov	r1, r3
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	791b      	ldrb	r3, [r3, #4]
 80005f8:	009b      	lsls	r3, r3, #2
 80005fa:	fa01 f303 	lsl.w	r3, r1, r3
 80005fe:	4619      	mov	r1, r3
 8000600:	687b      	ldr	r3, [r7, #4]
 8000602:	681b      	ldr	r3, [r3, #0]
 8000604:	430a      	orrs	r2, r1
 8000606:	621a      	str	r2, [r3, #32]
			pGPIOHandle->pGPIOx->AFR[1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 *((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)/8)));
		}

	}

}
 8000608:	e022      	b.n	8000650 <GPIO_Init+0x360>
			pGPIOHandle->pGPIOx->AFR[1]  &= ~( 0xF << (4 * ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)/8))); //clearing
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	681b      	ldr	r3, [r3, #0]
 800060e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000610:	687b      	ldr	r3, [r7, #4]
 8000612:	791b      	ldrb	r3, [r3, #4]
 8000614:	08db      	lsrs	r3, r3, #3
 8000616:	b2db      	uxtb	r3, r3
 8000618:	009b      	lsls	r3, r3, #2
 800061a:	210f      	movs	r1, #15
 800061c:	fa01 f303 	lsl.w	r3, r1, r3
 8000620:	43db      	mvns	r3, r3
 8000622:	4619      	mov	r1, r3
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	400a      	ands	r2, r1
 800062a:	625a      	str	r2, [r3, #36]	; 0x24
			pGPIOHandle->pGPIOx->AFR[1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 *((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)/8)));
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000632:	687b      	ldr	r3, [r7, #4]
 8000634:	7a5b      	ldrb	r3, [r3, #9]
 8000636:	4619      	mov	r1, r3
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	791b      	ldrb	r3, [r3, #4]
 800063c:	08db      	lsrs	r3, r3, #3
 800063e:	b2db      	uxtb	r3, r3
 8000640:	009b      	lsls	r3, r3, #2
 8000642:	fa01 f303 	lsl.w	r3, r1, r3
 8000646:	4619      	mov	r1, r3
 8000648:	687b      	ldr	r3, [r7, #4]
 800064a:	681b      	ldr	r3, [r3, #0]
 800064c:	430a      	orrs	r2, r1
 800064e:	625a      	str	r2, [r3, #36]	; 0x24
}
 8000650:	bf00      	nop
 8000652:	3714      	adds	r7, #20
 8000654:	46bd      	mov	sp, r7
 8000656:	bc80      	pop	{r7}
 8000658:	4770      	bx	lr
 800065a:	bf00      	nop
 800065c:	40023800 	.word	0x40023800
 8000660:	40013800 	.word	0x40013800
 8000664:	40013c00 	.word	0x40013c00

08000668 <GPIO_Read_Input_Pin>:

}
/*
 * GPIO Data read and write
 */
uint8_t GPIO_Read_Input_Pin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 8000668:	b480      	push	{r7}
 800066a:	b085      	sub	sp, #20
 800066c:	af00      	add	r7, sp, #0
 800066e:	6078      	str	r0, [r7, #4]
 8000670:	460b      	mov	r3, r1
 8000672:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value=(uint8_t)((pGPIOx->IDR >> PinNumber) & 0x00000001) ;
 8000674:	687b      	ldr	r3, [r7, #4]
 8000676:	691a      	ldr	r2, [r3, #16]
 8000678:	78fb      	ldrb	r3, [r7, #3]
 800067a:	fa22 f303 	lsr.w	r3, r2, r3
 800067e:	b2db      	uxtb	r3, r3
 8000680:	f003 0301 	and.w	r3, r3, #1
 8000684:	73fb      	strb	r3, [r7, #15]

	return value;
 8000686:	7bfb      	ldrb	r3, [r7, #15]
}
 8000688:	4618      	mov	r0, r3
 800068a:	3714      	adds	r7, #20
 800068c:	46bd      	mov	sp, r7
 800068e:	bc80      	pop	{r7}
 8000690:	4770      	bx	lr

08000692 <GPIO_Write_Output_Pin>:
	uint16_t value;
	value=(uint16_t)pGPIOx->IDR ;

	return value;
}
void GPIO_Write_Output_Pin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value){
 8000692:	b480      	push	{r7}
 8000694:	b083      	sub	sp, #12
 8000696:	af00      	add	r7, sp, #0
 8000698:	6078      	str	r0, [r7, #4]
 800069a:	460b      	mov	r3, r1
 800069c:	70fb      	strb	r3, [r7, #3]
 800069e:	4613      	mov	r3, r2
 80006a0:	70bb      	strb	r3, [r7, #2]

	if(Value==GPIO_SET){pGPIOx->ODR |=(GPIO_SET << PinNumber);}
 80006a2:	78bb      	ldrb	r3, [r7, #2]
 80006a4:	2b01      	cmp	r3, #1
 80006a6:	d109      	bne.n	80006bc <GPIO_Write_Output_Pin+0x2a>
 80006a8:	687b      	ldr	r3, [r7, #4]
 80006aa:	695b      	ldr	r3, [r3, #20]
 80006ac:	78fa      	ldrb	r2, [r7, #3]
 80006ae:	2101      	movs	r1, #1
 80006b0:	fa01 f202 	lsl.w	r2, r1, r2
 80006b4:	431a      	orrs	r2, r3
 80006b6:	687b      	ldr	r3, [r7, #4]
 80006b8:	615a      	str	r2, [r3, #20]

	else{pGPIOx->ODR &=(GPIO_RESET << PinNumber);}

}
 80006ba:	e004      	b.n	80006c6 <GPIO_Write_Output_Pin+0x34>
	else{pGPIOx->ODR &=(GPIO_RESET << PinNumber);}
 80006bc:	687b      	ldr	r3, [r7, #4]
 80006be:	695b      	ldr	r3, [r3, #20]
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	2200      	movs	r2, #0
 80006c4:	615a      	str	r2, [r3, #20]
}
 80006c6:	bf00      	nop
 80006c8:	370c      	adds	r7, #12
 80006ca:	46bd      	mov	sp, r7
 80006cc:	bc80      	pop	{r7}
 80006ce:	4770      	bx	lr

080006d0 <delay>:


}


void delay(void){
 80006d0:	b480      	push	{r7}
 80006d2:	b083      	sub	sp, #12
 80006d4:	af00      	add	r7, sp, #0

	for (uint32_t i = 0; i < 500000/2; ++i) {};
 80006d6:	2300      	movs	r3, #0
 80006d8:	607b      	str	r3, [r7, #4]
 80006da:	e002      	b.n	80006e2 <delay+0x12>
 80006dc:	687b      	ldr	r3, [r7, #4]
 80006de:	3301      	adds	r3, #1
 80006e0:	607b      	str	r3, [r7, #4]
 80006e2:	687b      	ldr	r3, [r7, #4]
 80006e4:	4a04      	ldr	r2, [pc, #16]	; (80006f8 <delay+0x28>)
 80006e6:	4293      	cmp	r3, r2
 80006e8:	d9f8      	bls.n	80006dc <delay+0xc>

}
 80006ea:	bf00      	nop
 80006ec:	bf00      	nop
 80006ee:	370c      	adds	r7, #12
 80006f0:	46bd      	mov	sp, r7
 80006f2:	bc80      	pop	{r7}
 80006f4:	4770      	bx	lr
 80006f6:	bf00      	nop
 80006f8:	0003d08f 	.word	0x0003d08f

080006fc <main>:
#define BTN_PRESSED HIGH

#define LOW 0
#define BTN_UNPRESSED LOW
int main(void)
{
 80006fc:	b580      	push	{r7, lr}
 80006fe:	b090      	sub	sp, #64	; 0x40
 8000700:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed15,GpioLed14,GpioLed13,GpioLed12, GPIOBtn;

	//this is led gpio configuration
	GpioLed15.pGPIOx = GPIOD;
 8000702:	4b4f      	ldr	r3, [pc, #316]	; (8000840 <main+0x144>)
 8000704:	637b      	str	r3, [r7, #52]	; 0x34
	GpioLed15.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_15;
 8000706:	230f      	movs	r3, #15
 8000708:	f887 3038 	strb.w	r3, [r7, #56]	; 0x38
	GpioLed15.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800070c:	2301      	movs	r3, #1
 800070e:	f887 3039 	strb.w	r3, [r7, #57]	; 0x39
	GpioLed15.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000712:	2302      	movs	r3, #2
 8000714:	f887 303a 	strb.w	r3, [r7, #58]	; 0x3a
	GpioLed15.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000718:	2300      	movs	r3, #0
 800071a:	f887 303c 	strb.w	r3, [r7, #60]	; 0x3c
	GpioLed15.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800071e:	2300      	movs	r3, #0
 8000720:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
	GPIO_Pclk_Ctrl(GPIOD,ENABLE);
 8000724:	2101      	movs	r1, #1
 8000726:	4846      	ldr	r0, [pc, #280]	; (8000840 <main+0x144>)
 8000728:	f7ff fd5e 	bl	80001e8 <GPIO_Pclk_Ctrl>
	GPIO_Init(&GpioLed15);
 800072c:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8000730:	4618      	mov	r0, r3
 8000732:	f7ff fddd 	bl	80002f0 <GPIO_Init>

	GpioLed14.pGPIOx = GPIOD;
 8000736:	4b42      	ldr	r3, [pc, #264]	; (8000840 <main+0x144>)
 8000738:	62bb      	str	r3, [r7, #40]	; 0x28
	GpioLed14.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_14;
 800073a:	230e      	movs	r3, #14
 800073c:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
	GpioLed14.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000740:	2301      	movs	r3, #1
 8000742:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
	GpioLed14.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000746:	2302      	movs	r3, #2
 8000748:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
	GpioLed14.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800074c:	2300      	movs	r3, #0
 800074e:	f887 3030 	strb.w	r3, [r7, #48]	; 0x30
	GpioLed14.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000752:	2300      	movs	r3, #0
 8000754:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
	GPIO_Init(&GpioLed14);
 8000758:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800075c:	4618      	mov	r0, r3
 800075e:	f7ff fdc7 	bl	80002f0 <GPIO_Init>


	GpioLed13.pGPIOx = GPIOD;
 8000762:	4b37      	ldr	r3, [pc, #220]	; (8000840 <main+0x144>)
 8000764:	61fb      	str	r3, [r7, #28]
	GpioLed13.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000766:	230d      	movs	r3, #13
 8000768:	f887 3020 	strb.w	r3, [r7, #32]
	GpioLed13.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800076c:	2301      	movs	r3, #1
 800076e:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
	GpioLed13.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000772:	2302      	movs	r3, #2
 8000774:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
	GpioLed13.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000778:	2300      	movs	r3, #0
 800077a:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
	GpioLed13.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800077e:	2300      	movs	r3, #0
 8000780:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
	GPIO_Init(&GpioLed13);
 8000784:	f107 031c 	add.w	r3, r7, #28
 8000788:	4618      	mov	r0, r3
 800078a:	f7ff fdb1 	bl	80002f0 <GPIO_Init>


	GpioLed12.pGPIOx = GPIOD;
 800078e:	4b2c      	ldr	r3, [pc, #176]	; (8000840 <main+0x144>)
 8000790:	613b      	str	r3, [r7, #16]
	GpioLed12.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 8000792:	230c      	movs	r3, #12
 8000794:	753b      	strb	r3, [r7, #20]
	GpioLed12.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000796:	2301      	movs	r3, #1
 8000798:	757b      	strb	r3, [r7, #21]
	GpioLed12.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800079a:	2302      	movs	r3, #2
 800079c:	75bb      	strb	r3, [r7, #22]
	GpioLed12.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800079e:	2300      	movs	r3, #0
 80007a0:	763b      	strb	r3, [r7, #24]
	GpioLed12.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80007a2:	2300      	movs	r3, #0
 80007a4:	75fb      	strb	r3, [r7, #23]
	GPIO_Init(&GpioLed12);
 80007a6:	f107 0310 	add.w	r3, r7, #16
 80007aa:	4618      	mov	r0, r3
 80007ac:	f7ff fda0 	bl	80002f0 <GPIO_Init>


	//this is btn gpio configuration
	GPIOBtn.pGPIOx = GPIOA;
 80007b0:	4b24      	ldr	r3, [pc, #144]	; (8000844 <main+0x148>)
 80007b2:	607b      	str	r3, [r7, #4]
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 80007b4:	2300      	movs	r3, #0
 80007b6:	723b      	strb	r3, [r7, #8]
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 80007b8:	2300      	movs	r3, #0
 80007ba:	727b      	strb	r3, [r7, #9]
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80007bc:	2302      	movs	r3, #2
 80007be:	72bb      	strb	r3, [r7, #10]
	GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80007c0:	2300      	movs	r3, #0
 80007c2:	72fb      	strb	r3, [r7, #11]

	GPIO_Pclk_Ctrl(GPIOA,ENABLE);
 80007c4:	2101      	movs	r1, #1
 80007c6:	481f      	ldr	r0, [pc, #124]	; (8000844 <main+0x148>)
 80007c8:	f7ff fd0e 	bl	80001e8 <GPIO_Pclk_Ctrl>

	GPIO_Init(&GPIOBtn);
 80007cc:	1d3b      	adds	r3, r7, #4
 80007ce:	4618      	mov	r0, r3
 80007d0:	f7ff fd8e 	bl	80002f0 <GPIO_Init>

	while(1)
	{

		if(GPIO_Read_Input_Pin(GPIOA,GPIO_PIN_NO_0) == BTN_PRESSED)
 80007d4:	2100      	movs	r1, #0
 80007d6:	481b      	ldr	r0, [pc, #108]	; (8000844 <main+0x148>)
 80007d8:	f7ff ff46 	bl	8000668 <GPIO_Read_Input_Pin>
 80007dc:	4603      	mov	r3, r0
 80007de:	2b01      	cmp	r3, #1
 80007e0:	d1f8      	bne.n	80007d4 <main+0xd8>
		{
			delay();
 80007e2:	f7ff ff75 	bl	80006d0 <delay>
			GPIO_Write_Output_Pin(GPIOD, GPIO_PIN_NO_12, HIGH);
 80007e6:	2201      	movs	r2, #1
 80007e8:	210c      	movs	r1, #12
 80007ea:	4815      	ldr	r0, [pc, #84]	; (8000840 <main+0x144>)
 80007ec:	f7ff ff51 	bl	8000692 <GPIO_Write_Output_Pin>
			GPIO_Write_Output_Pin(GPIOD, GPIO_PIN_NO_13, HIGH);
 80007f0:	2201      	movs	r2, #1
 80007f2:	210d      	movs	r1, #13
 80007f4:	4812      	ldr	r0, [pc, #72]	; (8000840 <main+0x144>)
 80007f6:	f7ff ff4c 	bl	8000692 <GPIO_Write_Output_Pin>
			GPIO_Write_Output_Pin(GPIOD, GPIO_PIN_NO_14, HIGH);
 80007fa:	2201      	movs	r2, #1
 80007fc:	210e      	movs	r1, #14
 80007fe:	4810      	ldr	r0, [pc, #64]	; (8000840 <main+0x144>)
 8000800:	f7ff ff47 	bl	8000692 <GPIO_Write_Output_Pin>
			GPIO_Write_Output_Pin(GPIOD, GPIO_PIN_NO_15, HIGH);
 8000804:	2201      	movs	r2, #1
 8000806:	210f      	movs	r1, #15
 8000808:	480d      	ldr	r0, [pc, #52]	; (8000840 <main+0x144>)
 800080a:	f7ff ff42 	bl	8000692 <GPIO_Write_Output_Pin>
			delay();
 800080e:	f7ff ff5f 	bl	80006d0 <delay>
			GPIO_Write_Output_Pin(GPIOD, GPIO_PIN_NO_12, LOW);
 8000812:	2200      	movs	r2, #0
 8000814:	210c      	movs	r1, #12
 8000816:	480a      	ldr	r0, [pc, #40]	; (8000840 <main+0x144>)
 8000818:	f7ff ff3b 	bl	8000692 <GPIO_Write_Output_Pin>
			GPIO_Write_Output_Pin(GPIOD, GPIO_PIN_NO_13, LOW);
 800081c:	2200      	movs	r2, #0
 800081e:	210d      	movs	r1, #13
 8000820:	4807      	ldr	r0, [pc, #28]	; (8000840 <main+0x144>)
 8000822:	f7ff ff36 	bl	8000692 <GPIO_Write_Output_Pin>
			GPIO_Write_Output_Pin(GPIOD, GPIO_PIN_NO_14, LOW);
 8000826:	2200      	movs	r2, #0
 8000828:	210e      	movs	r1, #14
 800082a:	4805      	ldr	r0, [pc, #20]	; (8000840 <main+0x144>)
 800082c:	f7ff ff31 	bl	8000692 <GPIO_Write_Output_Pin>
			GPIO_Write_Output_Pin(GPIOD, GPIO_PIN_NO_15, LOW);
 8000830:	2200      	movs	r2, #0
 8000832:	210f      	movs	r1, #15
 8000834:	4802      	ldr	r0, [pc, #8]	; (8000840 <main+0x144>)
 8000836:	f7ff ff2c 	bl	8000692 <GPIO_Write_Output_Pin>
			delay();
 800083a:	f7ff ff49 	bl	80006d0 <delay>
		if(GPIO_Read_Input_Pin(GPIOA,GPIO_PIN_NO_0) == BTN_PRESSED)
 800083e:	e7c9      	b.n	80007d4 <main+0xd8>
 8000840:	40020c00 	.word	0x40020c00
 8000844:	40020000 	.word	0x40020000

08000848 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000848:	480d      	ldr	r0, [pc, #52]	; (8000880 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800084a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 800084c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000850:	480c      	ldr	r0, [pc, #48]	; (8000884 <LoopForever+0x6>)
  ldr r1, =_edata
 8000852:	490d      	ldr	r1, [pc, #52]	; (8000888 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000854:	4a0d      	ldr	r2, [pc, #52]	; (800088c <LoopForever+0xe>)
  movs r3, #0
 8000856:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000858:	e002      	b.n	8000860 <LoopCopyDataInit>

0800085a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800085a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800085c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800085e:	3304      	adds	r3, #4

08000860 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000860:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000862:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000864:	d3f9      	bcc.n	800085a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000866:	4a0a      	ldr	r2, [pc, #40]	; (8000890 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000868:	4c0a      	ldr	r4, [pc, #40]	; (8000894 <LoopForever+0x16>)
  movs r3, #0
 800086a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800086c:	e001      	b.n	8000872 <LoopFillZerobss>

0800086e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800086e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000870:	3204      	adds	r2, #4

08000872 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000872:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000874:	d3fb      	bcc.n	800086e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000876:	f000 f811 	bl	800089c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800087a:	f7ff ff3f 	bl	80006fc <main>

0800087e <LoopForever>:

LoopForever:
    b LoopForever
 800087e:	e7fe      	b.n	800087e <LoopForever>
  ldr   r0, =_estack
 8000880:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000884:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000888:	2000042c 	.word	0x2000042c
  ldr r2, =_sidata
 800088c:	080009d8 	.word	0x080009d8
  ldr r2, =_sbss
 8000890:	2000042c 	.word	0x2000042c
  ldr r4, =_ebss
 8000894:	20000454 	.word	0x20000454

08000898 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000898:	e7fe      	b.n	8000898 <ADC_IRQHandler>
	...

0800089c <__libc_init_array>:
 800089c:	b570      	push	{r4, r5, r6, lr}
 800089e:	4d0d      	ldr	r5, [pc, #52]	; (80008d4 <__libc_init_array+0x38>)
 80008a0:	4c0d      	ldr	r4, [pc, #52]	; (80008d8 <__libc_init_array+0x3c>)
 80008a2:	1b64      	subs	r4, r4, r5
 80008a4:	10a4      	asrs	r4, r4, #2
 80008a6:	2600      	movs	r6, #0
 80008a8:	42a6      	cmp	r6, r4
 80008aa:	d109      	bne.n	80008c0 <__libc_init_array+0x24>
 80008ac:	4d0b      	ldr	r5, [pc, #44]	; (80008dc <__libc_init_array+0x40>)
 80008ae:	4c0c      	ldr	r4, [pc, #48]	; (80008e0 <__libc_init_array+0x44>)
 80008b0:	f000 f87e 	bl	80009b0 <_init>
 80008b4:	1b64      	subs	r4, r4, r5
 80008b6:	10a4      	asrs	r4, r4, #2
 80008b8:	2600      	movs	r6, #0
 80008ba:	42a6      	cmp	r6, r4
 80008bc:	d105      	bne.n	80008ca <__libc_init_array+0x2e>
 80008be:	bd70      	pop	{r4, r5, r6, pc}
 80008c0:	f855 3b04 	ldr.w	r3, [r5], #4
 80008c4:	4798      	blx	r3
 80008c6:	3601      	adds	r6, #1
 80008c8:	e7ee      	b.n	80008a8 <__libc_init_array+0xc>
 80008ca:	f855 3b04 	ldr.w	r3, [r5], #4
 80008ce:	4798      	blx	r3
 80008d0:	3601      	adds	r6, #1
 80008d2:	e7f2      	b.n	80008ba <__libc_init_array+0x1e>
 80008d4:	080009cc 	.word	0x080009cc
 80008d8:	080009cc 	.word	0x080009cc
 80008dc:	080009cc 	.word	0x080009cc
 80008e0:	080009d4 	.word	0x080009d4

080008e4 <register_fini>:
 80008e4:	4b02      	ldr	r3, [pc, #8]	; (80008f0 <register_fini+0xc>)
 80008e6:	b113      	cbz	r3, 80008ee <register_fini+0xa>
 80008e8:	4802      	ldr	r0, [pc, #8]	; (80008f4 <register_fini+0x10>)
 80008ea:	f000 b805 	b.w	80008f8 <atexit>
 80008ee:	4770      	bx	lr
 80008f0:	00000000 	.word	0x00000000
 80008f4:	08000905 	.word	0x08000905

080008f8 <atexit>:
 80008f8:	2300      	movs	r3, #0
 80008fa:	4601      	mov	r1, r0
 80008fc:	461a      	mov	r2, r3
 80008fe:	4618      	mov	r0, r3
 8000900:	f000 b816 	b.w	8000930 <__register_exitproc>

08000904 <__libc_fini_array>:
 8000904:	b538      	push	{r3, r4, r5, lr}
 8000906:	4d07      	ldr	r5, [pc, #28]	; (8000924 <__libc_fini_array+0x20>)
 8000908:	4c07      	ldr	r4, [pc, #28]	; (8000928 <__libc_fini_array+0x24>)
 800090a:	1b64      	subs	r4, r4, r5
 800090c:	10a4      	asrs	r4, r4, #2
 800090e:	b91c      	cbnz	r4, 8000918 <__libc_fini_array+0x14>
 8000910:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000914:	f000 b852 	b.w	80009bc <_fini>
 8000918:	3c01      	subs	r4, #1
 800091a:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 800091e:	4798      	blx	r3
 8000920:	e7f5      	b.n	800090e <__libc_fini_array+0xa>
 8000922:	bf00      	nop
 8000924:	080009d4 	.word	0x080009d4
 8000928:	080009d8 	.word	0x080009d8

0800092c <__retarget_lock_acquire_recursive>:
 800092c:	4770      	bx	lr

0800092e <__retarget_lock_release_recursive>:
 800092e:	4770      	bx	lr

08000930 <__register_exitproc>:
 8000930:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000934:	4d1c      	ldr	r5, [pc, #112]	; (80009a8 <__register_exitproc+0x78>)
 8000936:	4606      	mov	r6, r0
 8000938:	6828      	ldr	r0, [r5, #0]
 800093a:	4698      	mov	r8, r3
 800093c:	460f      	mov	r7, r1
 800093e:	4691      	mov	r9, r2
 8000940:	f7ff fff4 	bl	800092c <__retarget_lock_acquire_recursive>
 8000944:	4b19      	ldr	r3, [pc, #100]	; (80009ac <__register_exitproc+0x7c>)
 8000946:	681b      	ldr	r3, [r3, #0]
 8000948:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
 800094c:	4628      	mov	r0, r5
 800094e:	b91c      	cbnz	r4, 8000958 <__register_exitproc+0x28>
 8000950:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
 8000954:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
 8000958:	6865      	ldr	r5, [r4, #4]
 800095a:	6800      	ldr	r0, [r0, #0]
 800095c:	2d1f      	cmp	r5, #31
 800095e:	dd05      	ble.n	800096c <__register_exitproc+0x3c>
 8000960:	f7ff ffe5 	bl	800092e <__retarget_lock_release_recursive>
 8000964:	f04f 30ff 	mov.w	r0, #4294967295
 8000968:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800096c:	b19e      	cbz	r6, 8000996 <__register_exitproc+0x66>
 800096e:	eb04 0185 	add.w	r1, r4, r5, lsl #2
 8000972:	2201      	movs	r2, #1
 8000974:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
 8000978:	f8d4 3188 	ldr.w	r3, [r4, #392]	; 0x188
 800097c:	40aa      	lsls	r2, r5
 800097e:	4313      	orrs	r3, r2
 8000980:	2e02      	cmp	r6, #2
 8000982:	f8c4 3188 	str.w	r3, [r4, #392]	; 0x188
 8000986:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
 800098a:	bf02      	ittt	eq
 800098c:	f8d4 318c 	ldreq.w	r3, [r4, #396]	; 0x18c
 8000990:	431a      	orreq	r2, r3
 8000992:	f8c4 218c 	streq.w	r2, [r4, #396]	; 0x18c
 8000996:	1c6b      	adds	r3, r5, #1
 8000998:	3502      	adds	r5, #2
 800099a:	6063      	str	r3, [r4, #4]
 800099c:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
 80009a0:	f7ff ffc5 	bl	800092e <__retarget_lock_release_recursive>
 80009a4:	2000      	movs	r0, #0
 80009a6:	e7df      	b.n	8000968 <__register_exitproc+0x38>
 80009a8:	20000428 	.word	0x20000428
 80009ac:	080009c8 	.word	0x080009c8

080009b0 <_init>:
 80009b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009b2:	bf00      	nop
 80009b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009b6:	bc08      	pop	{r3}
 80009b8:	469e      	mov	lr, r3
 80009ba:	4770      	bx	lr

080009bc <_fini>:
 80009bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009be:	bf00      	nop
 80009c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009c2:	bc08      	pop	{r3}
 80009c4:	469e      	mov	lr, r3
 80009c6:	4770      	bx	lr
