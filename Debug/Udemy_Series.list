
Udemy_Series.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001d0  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000004  08000378  08000378  00010378  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800037c  0800037c  0002042c  2**0
                  CONTENTS
  4 .ARM          00000000  0800037c  0800037c  0002042c  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800037c  0800037c  0002042c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  0800037c  0800037c  0001037c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000384  08000384  00010384  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000042c  20000000  08000388  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002042c  2**0
                  CONTENTS
 10 .bss          00000028  2000042c  2000042c  0002042c  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000454  20000454  0002042c  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  0002042c  2**0
                  CONTENTS, READONLY
 13 .debug_info   000000a8  00000000  00000000  00020456  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000005b  00000000  00000000  000204fe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  00020560  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000030  00000000  00000000  000205a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000007b  00000000  00000000  000205d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000466  00000000  00000000  00020653  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00004f34  00000000  00000000  00020ab9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  000259ed  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000001f0  00000000  00000000  00025a40  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	2000042c 	.word	0x2000042c
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000360 	.word	0x08000360

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000430 	.word	0x20000430
 80001e4:	08000360 	.word	0x08000360

080001e8 <main>:
 *      Author: samed
 */

#include "stm32f407xx_usart_driver.h"

int main(void){
 80001e8:	b480      	push	{r7}
 80001ea:	af00      	add	r7, sp, #0



	return 0;
 80001ec:	2300      	movs	r3, #0
}
 80001ee:	4618      	mov	r0, r3
 80001f0:	46bd      	mov	sp, r7
 80001f2:	bc80      	pop	{r7}
 80001f4:	4770      	bx	lr
	...

080001f8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001f8:	480d      	ldr	r0, [pc, #52]	; (8000230 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001fa:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80001fc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000200:	480c      	ldr	r0, [pc, #48]	; (8000234 <LoopForever+0x6>)
  ldr r1, =_edata
 8000202:	490d      	ldr	r1, [pc, #52]	; (8000238 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000204:	4a0d      	ldr	r2, [pc, #52]	; (800023c <LoopForever+0xe>)
  movs r3, #0
 8000206:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000208:	e002      	b.n	8000210 <LoopCopyDataInit>

0800020a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800020a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800020c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800020e:	3304      	adds	r3, #4

08000210 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000210:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000212:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000214:	d3f9      	bcc.n	800020a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000216:	4a0a      	ldr	r2, [pc, #40]	; (8000240 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000218:	4c0a      	ldr	r4, [pc, #40]	; (8000244 <LoopForever+0x16>)
  movs r3, #0
 800021a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800021c:	e001      	b.n	8000222 <LoopFillZerobss>

0800021e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800021e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000220:	3204      	adds	r2, #4

08000222 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000222:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000224:	d3fb      	bcc.n	800021e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000226:	f000 f811 	bl	800024c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800022a:	f7ff ffdd 	bl	80001e8 <main>

0800022e <LoopForever>:

LoopForever:
    b LoopForever
 800022e:	e7fe      	b.n	800022e <LoopForever>
  ldr   r0, =_estack
 8000230:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000234:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000238:	2000042c 	.word	0x2000042c
  ldr r2, =_sidata
 800023c:	08000388 	.word	0x08000388
  ldr r2, =_sbss
 8000240:	2000042c 	.word	0x2000042c
  ldr r4, =_ebss
 8000244:	20000454 	.word	0x20000454

08000248 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000248:	e7fe      	b.n	8000248 <ADC_IRQHandler>
	...

0800024c <__libc_init_array>:
 800024c:	b570      	push	{r4, r5, r6, lr}
 800024e:	4d0d      	ldr	r5, [pc, #52]	; (8000284 <__libc_init_array+0x38>)
 8000250:	4c0d      	ldr	r4, [pc, #52]	; (8000288 <__libc_init_array+0x3c>)
 8000252:	1b64      	subs	r4, r4, r5
 8000254:	10a4      	asrs	r4, r4, #2
 8000256:	2600      	movs	r6, #0
 8000258:	42a6      	cmp	r6, r4
 800025a:	d109      	bne.n	8000270 <__libc_init_array+0x24>
 800025c:	4d0b      	ldr	r5, [pc, #44]	; (800028c <__libc_init_array+0x40>)
 800025e:	4c0c      	ldr	r4, [pc, #48]	; (8000290 <__libc_init_array+0x44>)
 8000260:	f000 f87e 	bl	8000360 <_init>
 8000264:	1b64      	subs	r4, r4, r5
 8000266:	10a4      	asrs	r4, r4, #2
 8000268:	2600      	movs	r6, #0
 800026a:	42a6      	cmp	r6, r4
 800026c:	d105      	bne.n	800027a <__libc_init_array+0x2e>
 800026e:	bd70      	pop	{r4, r5, r6, pc}
 8000270:	f855 3b04 	ldr.w	r3, [r5], #4
 8000274:	4798      	blx	r3
 8000276:	3601      	adds	r6, #1
 8000278:	e7ee      	b.n	8000258 <__libc_init_array+0xc>
 800027a:	f855 3b04 	ldr.w	r3, [r5], #4
 800027e:	4798      	blx	r3
 8000280:	3601      	adds	r6, #1
 8000282:	e7f2      	b.n	800026a <__libc_init_array+0x1e>
 8000284:	0800037c 	.word	0x0800037c
 8000288:	0800037c 	.word	0x0800037c
 800028c:	0800037c 	.word	0x0800037c
 8000290:	08000384 	.word	0x08000384

08000294 <register_fini>:
 8000294:	4b02      	ldr	r3, [pc, #8]	; (80002a0 <register_fini+0xc>)
 8000296:	b113      	cbz	r3, 800029e <register_fini+0xa>
 8000298:	4802      	ldr	r0, [pc, #8]	; (80002a4 <register_fini+0x10>)
 800029a:	f000 b805 	b.w	80002a8 <atexit>
 800029e:	4770      	bx	lr
 80002a0:	00000000 	.word	0x00000000
 80002a4:	080002b5 	.word	0x080002b5

080002a8 <atexit>:
 80002a8:	2300      	movs	r3, #0
 80002aa:	4601      	mov	r1, r0
 80002ac:	461a      	mov	r2, r3
 80002ae:	4618      	mov	r0, r3
 80002b0:	f000 b816 	b.w	80002e0 <__register_exitproc>

080002b4 <__libc_fini_array>:
 80002b4:	b538      	push	{r3, r4, r5, lr}
 80002b6:	4d07      	ldr	r5, [pc, #28]	; (80002d4 <__libc_fini_array+0x20>)
 80002b8:	4c07      	ldr	r4, [pc, #28]	; (80002d8 <__libc_fini_array+0x24>)
 80002ba:	1b64      	subs	r4, r4, r5
 80002bc:	10a4      	asrs	r4, r4, #2
 80002be:	b91c      	cbnz	r4, 80002c8 <__libc_fini_array+0x14>
 80002c0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80002c4:	f000 b852 	b.w	800036c <_fini>
 80002c8:	3c01      	subs	r4, #1
 80002ca:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 80002ce:	4798      	blx	r3
 80002d0:	e7f5      	b.n	80002be <__libc_fini_array+0xa>
 80002d2:	bf00      	nop
 80002d4:	08000384 	.word	0x08000384
 80002d8:	08000388 	.word	0x08000388

080002dc <__retarget_lock_acquire_recursive>:
 80002dc:	4770      	bx	lr

080002de <__retarget_lock_release_recursive>:
 80002de:	4770      	bx	lr

080002e0 <__register_exitproc>:
 80002e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80002e4:	4d1c      	ldr	r5, [pc, #112]	; (8000358 <__register_exitproc+0x78>)
 80002e6:	4606      	mov	r6, r0
 80002e8:	6828      	ldr	r0, [r5, #0]
 80002ea:	4698      	mov	r8, r3
 80002ec:	460f      	mov	r7, r1
 80002ee:	4691      	mov	r9, r2
 80002f0:	f7ff fff4 	bl	80002dc <__retarget_lock_acquire_recursive>
 80002f4:	4b19      	ldr	r3, [pc, #100]	; (800035c <__register_exitproc+0x7c>)
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
 80002fc:	4628      	mov	r0, r5
 80002fe:	b91c      	cbnz	r4, 8000308 <__register_exitproc+0x28>
 8000300:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
 8000304:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
 8000308:	6865      	ldr	r5, [r4, #4]
 800030a:	6800      	ldr	r0, [r0, #0]
 800030c:	2d1f      	cmp	r5, #31
 800030e:	dd05      	ble.n	800031c <__register_exitproc+0x3c>
 8000310:	f7ff ffe5 	bl	80002de <__retarget_lock_release_recursive>
 8000314:	f04f 30ff 	mov.w	r0, #4294967295
 8000318:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800031c:	b19e      	cbz	r6, 8000346 <__register_exitproc+0x66>
 800031e:	eb04 0185 	add.w	r1, r4, r5, lsl #2
 8000322:	2201      	movs	r2, #1
 8000324:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
 8000328:	f8d4 3188 	ldr.w	r3, [r4, #392]	; 0x188
 800032c:	40aa      	lsls	r2, r5
 800032e:	4313      	orrs	r3, r2
 8000330:	2e02      	cmp	r6, #2
 8000332:	f8c4 3188 	str.w	r3, [r4, #392]	; 0x188
 8000336:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
 800033a:	bf02      	ittt	eq
 800033c:	f8d4 318c 	ldreq.w	r3, [r4, #396]	; 0x18c
 8000340:	431a      	orreq	r2, r3
 8000342:	f8c4 218c 	streq.w	r2, [r4, #396]	; 0x18c
 8000346:	1c6b      	adds	r3, r5, #1
 8000348:	3502      	adds	r5, #2
 800034a:	6063      	str	r3, [r4, #4]
 800034c:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
 8000350:	f7ff ffc5 	bl	80002de <__retarget_lock_release_recursive>
 8000354:	2000      	movs	r0, #0
 8000356:	e7df      	b.n	8000318 <__register_exitproc+0x38>
 8000358:	20000428 	.word	0x20000428
 800035c:	08000378 	.word	0x08000378

08000360 <_init>:
 8000360:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000362:	bf00      	nop
 8000364:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000366:	bc08      	pop	{r3}
 8000368:	469e      	mov	lr, r3
 800036a:	4770      	bx	lr

0800036c <_fini>:
 800036c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800036e:	bf00      	nop
 8000370:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000372:	bc08      	pop	{r3}
 8000374:	469e      	mov	lr, r3
 8000376:	4770      	bx	lr
