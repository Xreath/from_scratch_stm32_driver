
Udemy_Series.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000009b8  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000004  08000b60  08000b60  00010b60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000b64  08000b64  0002042c  2**0
                  CONTENTS
  4 .ARM          00000000  08000b64  08000b64  0002042c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000b64  08000b64  0002042c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  08000b64  08000b64  00010b64  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000b6c  08000b6c  00010b6c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000042c  20000000  08000b70  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002042c  2**0
                  CONTENTS
 10 .bss          00000028  2000042c  2000042c  0002042c  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000454  20000454  0002042c  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  0002042c  2**0
                  CONTENTS, READONLY
 13 .debug_info   000012d5  00000000  00000000  00020456  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000378  00000000  00000000  0002172b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  00021aa8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000a0  00000000  00000000  00021b70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001da9  00000000  00000000  00021c10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000f56  00000000  00000000  000239b9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000820a  00000000  00000000  0002490f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  0002cb19  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000041c  00000000  00000000  0002cb6c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	2000042c 	.word	0x2000042c
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000b48 	.word	0x08000b48

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000430 	.word	0x20000430
 80001e4:	08000b48 	.word	0x08000b48

080001e8 <GPIO_Pclk_Ctrl>:
 *
 * @return            -  none
 *
 * @Note              -  none
 */
void GPIO_Pclk_Ctrl(GPIO_RegDef_t *pGPIOx,uint8_t EnorDi){
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	6078      	str	r0, [r7, #4]
 80001f0:	460b      	mov	r3, r1
 80001f2:	70fb      	strb	r3, [r7, #3]

	if(EnorDi==ENABLE){
 80001f4:	78fb      	ldrb	r3, [r7, #3]
 80001f6:	2b01      	cmp	r3, #1
 80001f8:	d161      	bne.n	80002be <GPIO_Pclk_Ctrl+0xd6>

		if(pGPIOx==GPIOA){GPIOA_PCLK_EN();}
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a32      	ldr	r2, [pc, #200]	; (80002c8 <GPIO_Pclk_Ctrl+0xe0>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d106      	bne.n	8000210 <GPIO_Pclk_Ctrl+0x28>
 8000202:	4b32      	ldr	r3, [pc, #200]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 8000204:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000206:	4a31      	ldr	r2, [pc, #196]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 8000208:	f043 0301 	orr.w	r3, r3, #1
 800020c:	6313      	str	r3, [r2, #48]	; 0x30
	}
	else
	{
	}

}
 800020e:	e056      	b.n	80002be <GPIO_Pclk_Ctrl+0xd6>
		else if(pGPIOx==GPIOB){GPIOB_PCLK_EN();}
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	4a2f      	ldr	r2, [pc, #188]	; (80002d0 <GPIO_Pclk_Ctrl+0xe8>)
 8000214:	4293      	cmp	r3, r2
 8000216:	d106      	bne.n	8000226 <GPIO_Pclk_Ctrl+0x3e>
 8000218:	4b2c      	ldr	r3, [pc, #176]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 800021a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800021c:	4a2b      	ldr	r2, [pc, #172]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 800021e:	f043 0302 	orr.w	r3, r3, #2
 8000222:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000224:	e04b      	b.n	80002be <GPIO_Pclk_Ctrl+0xd6>
		else if(pGPIOx==GPIOC){GPIOC_PCLK_EN();}
 8000226:	687b      	ldr	r3, [r7, #4]
 8000228:	4a2a      	ldr	r2, [pc, #168]	; (80002d4 <GPIO_Pclk_Ctrl+0xec>)
 800022a:	4293      	cmp	r3, r2
 800022c:	d106      	bne.n	800023c <GPIO_Pclk_Ctrl+0x54>
 800022e:	4b27      	ldr	r3, [pc, #156]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 8000230:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000232:	4a26      	ldr	r2, [pc, #152]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 8000234:	f043 0304 	orr.w	r3, r3, #4
 8000238:	6313      	str	r3, [r2, #48]	; 0x30
}
 800023a:	e040      	b.n	80002be <GPIO_Pclk_Ctrl+0xd6>
		else if(pGPIOx==GPIOD){GPIOD_PCLK_EN();}
 800023c:	687b      	ldr	r3, [r7, #4]
 800023e:	4a26      	ldr	r2, [pc, #152]	; (80002d8 <GPIO_Pclk_Ctrl+0xf0>)
 8000240:	4293      	cmp	r3, r2
 8000242:	d106      	bne.n	8000252 <GPIO_Pclk_Ctrl+0x6a>
 8000244:	4b21      	ldr	r3, [pc, #132]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 8000246:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000248:	4a20      	ldr	r2, [pc, #128]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 800024a:	f043 0308 	orr.w	r3, r3, #8
 800024e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000250:	e035      	b.n	80002be <GPIO_Pclk_Ctrl+0xd6>
		else if(pGPIOx==GPIOE){GPIOE_PCLK_EN();}
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	4a21      	ldr	r2, [pc, #132]	; (80002dc <GPIO_Pclk_Ctrl+0xf4>)
 8000256:	4293      	cmp	r3, r2
 8000258:	d106      	bne.n	8000268 <GPIO_Pclk_Ctrl+0x80>
 800025a:	4b1c      	ldr	r3, [pc, #112]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 800025c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800025e:	4a1b      	ldr	r2, [pc, #108]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 8000260:	f043 0310 	orr.w	r3, r3, #16
 8000264:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000266:	e02a      	b.n	80002be <GPIO_Pclk_Ctrl+0xd6>
		else if(pGPIOx==GPIOF){GPIOF_PCLK_EN();}
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	4a1d      	ldr	r2, [pc, #116]	; (80002e0 <GPIO_Pclk_Ctrl+0xf8>)
 800026c:	4293      	cmp	r3, r2
 800026e:	d106      	bne.n	800027e <GPIO_Pclk_Ctrl+0x96>
 8000270:	4b16      	ldr	r3, [pc, #88]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 8000272:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000274:	4a15      	ldr	r2, [pc, #84]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 8000276:	f043 0320 	orr.w	r3, r3, #32
 800027a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800027c:	e01f      	b.n	80002be <GPIO_Pclk_Ctrl+0xd6>
		else if(pGPIOx==GPIOG){GPIOG_PCLK_EN();}
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	4a18      	ldr	r2, [pc, #96]	; (80002e4 <GPIO_Pclk_Ctrl+0xfc>)
 8000282:	4293      	cmp	r3, r2
 8000284:	d106      	bne.n	8000294 <GPIO_Pclk_Ctrl+0xac>
 8000286:	4b11      	ldr	r3, [pc, #68]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 8000288:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028a:	4a10      	ldr	r2, [pc, #64]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 800028c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000290:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000292:	e014      	b.n	80002be <GPIO_Pclk_Ctrl+0xd6>
		else if(pGPIOx==GPIOH){GPIOH_PCLK_EN();}
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	4a14      	ldr	r2, [pc, #80]	; (80002e8 <GPIO_Pclk_Ctrl+0x100>)
 8000298:	4293      	cmp	r3, r2
 800029a:	d106      	bne.n	80002aa <GPIO_Pclk_Ctrl+0xc2>
 800029c:	4b0b      	ldr	r3, [pc, #44]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 800029e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a0:	4a0a      	ldr	r2, [pc, #40]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 80002a2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002a8:	e009      	b.n	80002be <GPIO_Pclk_Ctrl+0xd6>
		else if(pGPIOx==GPIOI){GPIOI_PCLK_EN();}
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	4a0f      	ldr	r2, [pc, #60]	; (80002ec <GPIO_Pclk_Ctrl+0x104>)
 80002ae:	4293      	cmp	r3, r2
 80002b0:	d105      	bne.n	80002be <GPIO_Pclk_Ctrl+0xd6>
 80002b2:	4b06      	ldr	r3, [pc, #24]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 80002b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b6:	4a05      	ldr	r2, [pc, #20]	; (80002cc <GPIO_Pclk_Ctrl+0xe4>)
 80002b8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002bc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002be:	bf00      	nop
 80002c0:	370c      	adds	r7, #12
 80002c2:	46bd      	mov	sp, r7
 80002c4:	bc80      	pop	{r7}
 80002c6:	4770      	bx	lr
 80002c8:	40020000 	.word	0x40020000
 80002cc:	40023800 	.word	0x40023800
 80002d0:	40020400 	.word	0x40020400
 80002d4:	40020800 	.word	0x40020800
 80002d8:	40020c00 	.word	0x40020c00
 80002dc:	40021000 	.word	0x40021000
 80002e0:	40021400 	.word	0x40021400
 80002e4:	40021800 	.word	0x40021800
 80002e8:	40021c00 	.word	0x40021c00
 80002ec:	40022000 	.word	0x40022000

080002f0 <GPIO_Init>:
 * @return            -  none
 *
 * @Note              -  none
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80002f0:	b580      	push	{r7, lr}
 80002f2:	b086      	sub	sp, #24
 80002f4:	af00      	add	r7, sp, #0
 80002f6:	6078      	str	r0, [r7, #4]
	 uint32_t temp=0; //temp. register
 80002f8:	2300      	movs	r3, #0
 80002fa:	617b      	str	r3, [r7, #20]

	 //enable the peripheral clock

	 GPIO_Pclk_Ctrl(pGPIOHandle->pGPIOx, ENABLE);
 80002fc:	687b      	ldr	r3, [r7, #4]
 80002fe:	681b      	ldr	r3, [r3, #0]
 8000300:	2101      	movs	r1, #1
 8000302:	4618      	mov	r0, r3
 8000304:	f7ff ff70 	bl	80001e8 <GPIO_Pclk_Ctrl>

	//1 . configure the mode of gpio pin

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	795b      	ldrb	r3, [r3, #5]
 800030c:	2b03      	cmp	r3, #3
 800030e:	d820      	bhi.n	8000352 <GPIO_Init+0x62>
	{
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ) );
 8000310:	687b      	ldr	r3, [r7, #4]
 8000312:	795b      	ldrb	r3, [r3, #5]
 8000314:	461a      	mov	r2, r3
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	791b      	ldrb	r3, [r3, #4]
 800031a:	005b      	lsls	r3, r3, #1
 800031c:	fa02 f303 	lsl.w	r3, r2, r3
 8000320:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	681b      	ldr	r3, [r3, #0]
 8000326:	681a      	ldr	r2, [r3, #0]
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	791b      	ldrb	r3, [r3, #4]
 800032c:	005b      	lsls	r3, r3, #1
 800032e:	2103      	movs	r1, #3
 8000330:	fa01 f303 	lsl.w	r3, r1, r3
 8000334:	43db      	mvns	r3, r3
 8000336:	4619      	mov	r1, r3
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	681b      	ldr	r3, [r3, #0]
 800033c:	400a      	ands	r2, r1
 800033e:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; //setting
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	681b      	ldr	r3, [r3, #0]
 8000344:	6819      	ldr	r1, [r3, #0]
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	681b      	ldr	r3, [r3, #0]
 800034a:	697a      	ldr	r2, [r7, #20]
 800034c:	430a      	orrs	r2, r1
 800034e:	601a      	str	r2, [r3, #0]
 8000350:	e0cb      	b.n	80004ea <GPIO_Init+0x1fa>

	}else
	{
		//this part will code later . ( interrupt mode)
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_FT )
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	795b      	ldrb	r3, [r3, #5]
 8000356:	2b04      	cmp	r3, #4
 8000358:	d117      	bne.n	800038a <GPIO_Init+0x9a>
		{
			//1. configure the FTSR
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800035a:	4b4b      	ldr	r3, [pc, #300]	; (8000488 <GPIO_Init+0x198>)
 800035c:	68db      	ldr	r3, [r3, #12]
 800035e:	687a      	ldr	r2, [r7, #4]
 8000360:	7912      	ldrb	r2, [r2, #4]
 8000362:	4611      	mov	r1, r2
 8000364:	2201      	movs	r2, #1
 8000366:	408a      	lsls	r2, r1
 8000368:	4611      	mov	r1, r2
 800036a:	4a47      	ldr	r2, [pc, #284]	; (8000488 <GPIO_Init+0x198>)
 800036c:	430b      	orrs	r3, r1
 800036e:	60d3      	str	r3, [r2, #12]
			//Clear the corresponding RTSR bit
			EXTI->RTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000370:	4b45      	ldr	r3, [pc, #276]	; (8000488 <GPIO_Init+0x198>)
 8000372:	689b      	ldr	r3, [r3, #8]
 8000374:	687a      	ldr	r2, [r7, #4]
 8000376:	7912      	ldrb	r2, [r2, #4]
 8000378:	4611      	mov	r1, r2
 800037a:	2201      	movs	r2, #1
 800037c:	408a      	lsls	r2, r1
 800037e:	43d2      	mvns	r2, r2
 8000380:	4611      	mov	r1, r2
 8000382:	4a41      	ldr	r2, [pc, #260]	; (8000488 <GPIO_Init+0x198>)
 8000384:	400b      	ands	r3, r1
 8000386:	6093      	str	r3, [r2, #8]
 8000388:	e035      	b.n	80003f6 <GPIO_Init+0x106>

		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_RT )
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	795b      	ldrb	r3, [r3, #5]
 800038e:	2b05      	cmp	r3, #5
 8000390:	d117      	bne.n	80003c2 <GPIO_Init+0xd2>
		{
			//1 . configure the RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000392:	4b3d      	ldr	r3, [pc, #244]	; (8000488 <GPIO_Init+0x198>)
 8000394:	689b      	ldr	r3, [r3, #8]
 8000396:	687a      	ldr	r2, [r7, #4]
 8000398:	7912      	ldrb	r2, [r2, #4]
 800039a:	4611      	mov	r1, r2
 800039c:	2201      	movs	r2, #1
 800039e:	408a      	lsls	r2, r1
 80003a0:	4611      	mov	r1, r2
 80003a2:	4a39      	ldr	r2, [pc, #228]	; (8000488 <GPIO_Init+0x198>)
 80003a4:	430b      	orrs	r3, r1
 80003a6:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI->FTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003a8:	4b37      	ldr	r3, [pc, #220]	; (8000488 <GPIO_Init+0x198>)
 80003aa:	68db      	ldr	r3, [r3, #12]
 80003ac:	687a      	ldr	r2, [r7, #4]
 80003ae:	7912      	ldrb	r2, [r2, #4]
 80003b0:	4611      	mov	r1, r2
 80003b2:	2201      	movs	r2, #1
 80003b4:	408a      	lsls	r2, r1
 80003b6:	43d2      	mvns	r2, r2
 80003b8:	4611      	mov	r1, r2
 80003ba:	4a33      	ldr	r2, [pc, #204]	; (8000488 <GPIO_Init+0x198>)
 80003bc:	400b      	ands	r3, r1
 80003be:	60d3      	str	r3, [r2, #12]
 80003c0:	e019      	b.n	80003f6 <GPIO_Init+0x106>

		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT )
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	795b      	ldrb	r3, [r3, #5]
 80003c6:	2b06      	cmp	r3, #6
 80003c8:	d115      	bne.n	80003f6 <GPIO_Init+0x106>
		{
			//1. configure both FTSR and RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003ca:	4b2f      	ldr	r3, [pc, #188]	; (8000488 <GPIO_Init+0x198>)
 80003cc:	689b      	ldr	r3, [r3, #8]
 80003ce:	687a      	ldr	r2, [r7, #4]
 80003d0:	7912      	ldrb	r2, [r2, #4]
 80003d2:	4611      	mov	r1, r2
 80003d4:	2201      	movs	r2, #1
 80003d6:	408a      	lsls	r2, r1
 80003d8:	4611      	mov	r1, r2
 80003da:	4a2b      	ldr	r2, [pc, #172]	; (8000488 <GPIO_Init+0x198>)
 80003dc:	430b      	orrs	r3, r1
 80003de:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003e0:	4b29      	ldr	r3, [pc, #164]	; (8000488 <GPIO_Init+0x198>)
 80003e2:	68db      	ldr	r3, [r3, #12]
 80003e4:	687a      	ldr	r2, [r7, #4]
 80003e6:	7912      	ldrb	r2, [r2, #4]
 80003e8:	4611      	mov	r1, r2
 80003ea:	2201      	movs	r2, #1
 80003ec:	408a      	lsls	r2, r1
 80003ee:	4611      	mov	r1, r2
 80003f0:	4a25      	ldr	r2, [pc, #148]	; (8000488 <GPIO_Init+0x198>)
 80003f2:	430b      	orrs	r3, r1
 80003f4:	60d3      	str	r3, [r2, #12]
		}

		//2. configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4 ;
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	791b      	ldrb	r3, [r3, #4]
 80003fa:	089b      	lsrs	r3, r3, #2
 80003fc:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	791b      	ldrb	r3, [r3, #4]
 8000402:	f003 0303 	and.w	r3, r3, #3
 8000406:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	681b      	ldr	r3, [r3, #0]
 800040c:	4a1f      	ldr	r2, [pc, #124]	; (800048c <GPIO_Init+0x19c>)
 800040e:	4293      	cmp	r3, r2
 8000410:	d04e      	beq.n	80004b0 <GPIO_Init+0x1c0>
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	681b      	ldr	r3, [r3, #0]
 8000416:	4a1e      	ldr	r2, [pc, #120]	; (8000490 <GPIO_Init+0x1a0>)
 8000418:	4293      	cmp	r3, r2
 800041a:	d032      	beq.n	8000482 <GPIO_Init+0x192>
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	681b      	ldr	r3, [r3, #0]
 8000420:	4a1c      	ldr	r2, [pc, #112]	; (8000494 <GPIO_Init+0x1a4>)
 8000422:	4293      	cmp	r3, r2
 8000424:	d02b      	beq.n	800047e <GPIO_Init+0x18e>
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	4a1b      	ldr	r2, [pc, #108]	; (8000498 <GPIO_Init+0x1a8>)
 800042c:	4293      	cmp	r3, r2
 800042e:	d024      	beq.n	800047a <GPIO_Init+0x18a>
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	681b      	ldr	r3, [r3, #0]
 8000434:	4a19      	ldr	r2, [pc, #100]	; (800049c <GPIO_Init+0x1ac>)
 8000436:	4293      	cmp	r3, r2
 8000438:	d01d      	beq.n	8000476 <GPIO_Init+0x186>
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	681b      	ldr	r3, [r3, #0]
 800043e:	4a18      	ldr	r2, [pc, #96]	; (80004a0 <GPIO_Init+0x1b0>)
 8000440:	4293      	cmp	r3, r2
 8000442:	d016      	beq.n	8000472 <GPIO_Init+0x182>
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	681b      	ldr	r3, [r3, #0]
 8000448:	4a16      	ldr	r2, [pc, #88]	; (80004a4 <GPIO_Init+0x1b4>)
 800044a:	4293      	cmp	r3, r2
 800044c:	d00f      	beq.n	800046e <GPIO_Init+0x17e>
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	681b      	ldr	r3, [r3, #0]
 8000452:	4a15      	ldr	r2, [pc, #84]	; (80004a8 <GPIO_Init+0x1b8>)
 8000454:	4293      	cmp	r3, r2
 8000456:	d008      	beq.n	800046a <GPIO_Init+0x17a>
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	681b      	ldr	r3, [r3, #0]
 800045c:	4a13      	ldr	r2, [pc, #76]	; (80004ac <GPIO_Init+0x1bc>)
 800045e:	4293      	cmp	r3, r2
 8000460:	d101      	bne.n	8000466 <GPIO_Init+0x176>
 8000462:	2308      	movs	r3, #8
 8000464:	e025      	b.n	80004b2 <GPIO_Init+0x1c2>
 8000466:	2300      	movs	r3, #0
 8000468:	e023      	b.n	80004b2 <GPIO_Init+0x1c2>
 800046a:	2307      	movs	r3, #7
 800046c:	e021      	b.n	80004b2 <GPIO_Init+0x1c2>
 800046e:	2306      	movs	r3, #6
 8000470:	e01f      	b.n	80004b2 <GPIO_Init+0x1c2>
 8000472:	2305      	movs	r3, #5
 8000474:	e01d      	b.n	80004b2 <GPIO_Init+0x1c2>
 8000476:	2304      	movs	r3, #4
 8000478:	e01b      	b.n	80004b2 <GPIO_Init+0x1c2>
 800047a:	2303      	movs	r3, #3
 800047c:	e019      	b.n	80004b2 <GPIO_Init+0x1c2>
 800047e:	2302      	movs	r3, #2
 8000480:	e017      	b.n	80004b2 <GPIO_Init+0x1c2>
 8000482:	2301      	movs	r3, #1
 8000484:	e015      	b.n	80004b2 <GPIO_Init+0x1c2>
 8000486:	bf00      	nop
 8000488:	40013c00 	.word	0x40013c00
 800048c:	40020000 	.word	0x40020000
 8000490:	40020400 	.word	0x40020400
 8000494:	40020800 	.word	0x40020800
 8000498:	40020c00 	.word	0x40020c00
 800049c:	40021000 	.word	0x40021000
 80004a0:	40021400 	.word	0x40021400
 80004a4:	40021800 	.word	0x40021800
 80004a8:	40021c00 	.word	0x40021c00
 80004ac:	40022000 	.word	0x40022000
 80004b0:	2300      	movs	r3, #0
 80004b2:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 80004b4:	4b59      	ldr	r3, [pc, #356]	; (800061c <GPIO_Init+0x32c>)
 80004b6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80004b8:	4a58      	ldr	r2, [pc, #352]	; (800061c <GPIO_Init+0x32c>)
 80004ba:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80004be:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode << ( temp2 * 4);
 80004c0:	7c7a      	ldrb	r2, [r7, #17]
 80004c2:	7cbb      	ldrb	r3, [r7, #18]
 80004c4:	009b      	lsls	r3, r3, #2
 80004c6:	fa02 f103 	lsl.w	r1, r2, r3
 80004ca:	4a55      	ldr	r2, [pc, #340]	; (8000620 <GPIO_Init+0x330>)
 80004cc:	7cfb      	ldrb	r3, [r7, #19]
 80004ce:	3302      	adds	r3, #2
 80004d0:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3 . enable the exti interrupt delivery using IMR
		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80004d4:	4b53      	ldr	r3, [pc, #332]	; (8000624 <GPIO_Init+0x334>)
 80004d6:	681b      	ldr	r3, [r3, #0]
 80004d8:	687a      	ldr	r2, [r7, #4]
 80004da:	7912      	ldrb	r2, [r2, #4]
 80004dc:	4611      	mov	r1, r2
 80004de:	2201      	movs	r2, #1
 80004e0:	408a      	lsls	r2, r1
 80004e2:	4611      	mov	r1, r2
 80004e4:	4a4f      	ldr	r2, [pc, #316]	; (8000624 <GPIO_Init+0x334>)
 80004e6:	430b      	orrs	r3, r1
 80004e8:	6013      	str	r3, [r2, #0]
	}

	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	799b      	ldrb	r3, [r3, #6]
 80004ee:	461a      	mov	r2, r3
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	791b      	ldrb	r3, [r3, #4]
 80004f4:	005b      	lsls	r3, r3, #1
 80004f6:	fa02 f303 	lsl.w	r3, r2, r3
 80004fa:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	681b      	ldr	r3, [r3, #0]
 8000500:	689a      	ldr	r2, [r3, #8]
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	791b      	ldrb	r3, [r3, #4]
 8000506:	005b      	lsls	r3, r3, #1
 8000508:	2103      	movs	r1, #3
 800050a:	fa01 f303 	lsl.w	r3, r1, r3
 800050e:	43db      	mvns	r3, r3
 8000510:	4619      	mov	r1, r3
 8000512:	687b      	ldr	r3, [r7, #4]
 8000514:	681b      	ldr	r3, [r3, #0]
 8000516:	400a      	ands	r2, r1
 8000518:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	6899      	ldr	r1, [r3, #8]
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	681b      	ldr	r3, [r3, #0]
 8000524:	697a      	ldr	r2, [r7, #20]
 8000526:	430a      	orrs	r2, r1
 8000528:	609a      	str	r2, [r3, #8]

	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	79db      	ldrb	r3, [r3, #7]
 800052e:	461a      	mov	r2, r3
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	791b      	ldrb	r3, [r3, #4]
 8000534:	005b      	lsls	r3, r3, #1
 8000536:	fa02 f303 	lsl.w	r3, r2, r3
 800053a:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	681b      	ldr	r3, [r3, #0]
 8000540:	68da      	ldr	r2, [r3, #12]
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	791b      	ldrb	r3, [r3, #4]
 8000546:	005b      	lsls	r3, r3, #1
 8000548:	2103      	movs	r1, #3
 800054a:	fa01 f303 	lsl.w	r3, r1, r3
 800054e:	43db      	mvns	r3, r3
 8000550:	4619      	mov	r1, r3
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	681b      	ldr	r3, [r3, #0]
 8000556:	400a      	ands	r2, r1
 8000558:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	681b      	ldr	r3, [r3, #0]
 800055e:	68d9      	ldr	r1, [r3, #12]
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	681b      	ldr	r3, [r3, #0]
 8000564:	697a      	ldr	r2, [r7, #20]
 8000566:	430a      	orrs	r2, r1
 8000568:	60da      	str	r2, [r3, #12]


	//4. configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	7a1b      	ldrb	r3, [r3, #8]
 800056e:	461a      	mov	r2, r3
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	791b      	ldrb	r3, [r3, #4]
 8000574:	fa02 f303 	lsl.w	r3, r2, r3
 8000578:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 800057a:	687b      	ldr	r3, [r7, #4]
 800057c:	681b      	ldr	r3, [r3, #0]
 800057e:	685a      	ldr	r2, [r3, #4]
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	791b      	ldrb	r3, [r3, #4]
 8000584:	4619      	mov	r1, r3
 8000586:	2301      	movs	r3, #1
 8000588:	408b      	lsls	r3, r1
 800058a:	43db      	mvns	r3, r3
 800058c:	4619      	mov	r1, r3
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	681b      	ldr	r3, [r3, #0]
 8000592:	400a      	ands	r2, r1
 8000594:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	681b      	ldr	r3, [r3, #0]
 800059a:	6859      	ldr	r1, [r3, #4]
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	681b      	ldr	r3, [r3, #0]
 80005a0:	697a      	ldr	r2, [r7, #20]
 80005a2:	430a      	orrs	r2, r1
 80005a4:	605a      	str	r2, [r3, #4]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 80005a6:	687b      	ldr	r3, [r7, #4]
 80005a8:	795b      	ldrb	r3, [r3, #5]
 80005aa:	2b02      	cmp	r3, #2
 80005ac:	d131      	bne.n	8000612 <GPIO_Init+0x322>
	{
		//configure the alt function registers.
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	791b      	ldrb	r3, [r3, #4]
 80005b2:	08db      	lsrs	r3, r3, #3
 80005b4:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber  % 8;
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	791b      	ldrb	r3, [r3, #4]
 80005ba:	f003 0307 	and.w	r3, r3, #7
 80005be:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << ( 4 * temp2 ) ); //clearing
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	681b      	ldr	r3, [r3, #0]
 80005c4:	7c3a      	ldrb	r2, [r7, #16]
 80005c6:	3208      	adds	r2, #8
 80005c8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005cc:	7bfb      	ldrb	r3, [r7, #15]
 80005ce:	009b      	lsls	r3, r3, #2
 80005d0:	220f      	movs	r2, #15
 80005d2:	fa02 f303 	lsl.w	r3, r2, r3
 80005d6:	43db      	mvns	r3, r3
 80005d8:	4618      	mov	r0, r3
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	681b      	ldr	r3, [r3, #0]
 80005de:	7c3a      	ldrb	r2, [r7, #16]
 80005e0:	4001      	ands	r1, r0
 80005e2:	3208      	adds	r2, #8
 80005e4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ) );
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	681b      	ldr	r3, [r3, #0]
 80005ec:	7c3a      	ldrb	r2, [r7, #16]
 80005ee:	3208      	adds	r2, #8
 80005f0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	7a5b      	ldrb	r3, [r3, #9]
 80005f8:	461a      	mov	r2, r3
 80005fa:	7bfb      	ldrb	r3, [r7, #15]
 80005fc:	009b      	lsls	r3, r3, #2
 80005fe:	fa02 f303 	lsl.w	r3, r2, r3
 8000602:	4618      	mov	r0, r3
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	681b      	ldr	r3, [r3, #0]
 8000608:	7c3a      	ldrb	r2, [r7, #16]
 800060a:	4301      	orrs	r1, r0
 800060c:	3208      	adds	r2, #8
 800060e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 8000612:	bf00      	nop
 8000614:	3718      	adds	r7, #24
 8000616:	46bd      	mov	sp, r7
 8000618:	bd80      	pop	{r7, pc}
 800061a:	bf00      	nop
 800061c:	40023800 	.word	0x40023800
 8000620:	40013800 	.word	0x40013800
 8000624:	40013c00 	.word	0x40013c00

08000628 <GPIO_Write_Output_Pin>:
	uint16_t value;
	value=(uint16_t)pGPIOx->IDR ;

	return value;
}
void GPIO_Write_Output_Pin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value){
 8000628:	b480      	push	{r7}
 800062a:	b083      	sub	sp, #12
 800062c:	af00      	add	r7, sp, #0
 800062e:	6078      	str	r0, [r7, #4]
 8000630:	460b      	mov	r3, r1
 8000632:	70fb      	strb	r3, [r7, #3]
 8000634:	4613      	mov	r3, r2
 8000636:	70bb      	strb	r3, [r7, #2]

	if(Value==GPIO_SET){pGPIOx->ODR |=(GPIO_SET << PinNumber);}
 8000638:	78bb      	ldrb	r3, [r7, #2]
 800063a:	2b01      	cmp	r3, #1
 800063c:	d109      	bne.n	8000652 <GPIO_Write_Output_Pin+0x2a>
 800063e:	687b      	ldr	r3, [r7, #4]
 8000640:	695b      	ldr	r3, [r3, #20]
 8000642:	78fa      	ldrb	r2, [r7, #3]
 8000644:	2101      	movs	r1, #1
 8000646:	fa01 f202 	lsl.w	r2, r1, r2
 800064a:	431a      	orrs	r2, r3
 800064c:	687b      	ldr	r3, [r7, #4]
 800064e:	615a      	str	r2, [r3, #20]

	else{pGPIOx->ODR &= ~(GPIO_SET << PinNumber);}

}
 8000650:	e009      	b.n	8000666 <GPIO_Write_Output_Pin+0x3e>
	else{pGPIOx->ODR &= ~(GPIO_SET << PinNumber);}
 8000652:	687b      	ldr	r3, [r7, #4]
 8000654:	695b      	ldr	r3, [r3, #20]
 8000656:	78fa      	ldrb	r2, [r7, #3]
 8000658:	2101      	movs	r1, #1
 800065a:	fa01 f202 	lsl.w	r2, r1, r2
 800065e:	43d2      	mvns	r2, r2
 8000660:	401a      	ands	r2, r3
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	615a      	str	r2, [r3, #20]
}
 8000666:	bf00      	nop
 8000668:	370c      	adds	r7, #12
 800066a:	46bd      	mov	sp, r7
 800066c:	bc80      	pop	{r7}
 800066e:	4770      	bx	lr

08000670 <GPIO_IRQPriorityConfig>:

/*
 * GPIO Interrupt and config
 */
void GPIO_IRQPriorityConfig(uint8_t IRQNumber,uint32_t IRQPriority)
{
 8000670:	b480      	push	{r7}
 8000672:	b085      	sub	sp, #20
 8000674:	af00      	add	r7, sp, #0
 8000676:	4603      	mov	r3, r0
 8000678:	6039      	str	r1, [r7, #0]
 800067a:	71fb      	strb	r3, [r7, #7]
	//1. first lets find out the ipr register
	uint8_t iprx = IRQNumber / 4;
 800067c:	79fb      	ldrb	r3, [r7, #7]
 800067e:	089b      	lsrs	r3, r3, #2
 8000680:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section  = IRQNumber %4 ;
 8000682:	79fb      	ldrb	r3, [r7, #7]
 8000684:	f003 0303 	and.w	r3, r3, #3
 8000688:	73bb      	strb	r3, [r7, #14]

	uint8_t shift_amount = ( 8 * iprx_section) + ( 8 - NO_PR_BITS_IMPLEMENTED) ;
 800068a:	7bbb      	ldrb	r3, [r7, #14]
 800068c:	00db      	lsls	r3, r3, #3
 800068e:	b2db      	uxtb	r3, r3
 8000690:	3304      	adds	r3, #4
 8000692:	737b      	strb	r3, [r7, #13]

	*(  NVIC_PR_BASE_ADDR + iprx) |=  ( IRQPriority << shift_amount );
 8000694:	7bfb      	ldrb	r3, [r7, #15]
 8000696:	009b      	lsls	r3, r3, #2
 8000698:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 800069c:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80006a0:	6819      	ldr	r1, [r3, #0]
 80006a2:	7b7b      	ldrb	r3, [r7, #13]
 80006a4:	683a      	ldr	r2, [r7, #0]
 80006a6:	409a      	lsls	r2, r3
 80006a8:	7bfb      	ldrb	r3, [r7, #15]
 80006aa:	009b      	lsls	r3, r3, #2
 80006ac:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80006b0:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80006b4:	430a      	orrs	r2, r1
 80006b6:	601a      	str	r2, [r3, #0]

}
 80006b8:	bf00      	nop
 80006ba:	3714      	adds	r7, #20
 80006bc:	46bd      	mov	sp, r7
 80006be:	bc80      	pop	{r7}
 80006c0:	4770      	bx	lr
	...

080006c4 <GPIO_IRQInterruptConfig>:

void GPIO_IRQInterruptConfig(uint8_t IRQNumber,uint8_t EnorDi){
 80006c4:	b480      	push	{r7}
 80006c6:	b083      	sub	sp, #12
 80006c8:	af00      	add	r7, sp, #0
 80006ca:	4603      	mov	r3, r0
 80006cc:	460a      	mov	r2, r1
 80006ce:	71fb      	strb	r3, [r7, #7]
 80006d0:	4613      	mov	r3, r2
 80006d2:	71bb      	strb	r3, [r7, #6]

	if(EnorDi == ENABLE)
 80006d4:	79bb      	ldrb	r3, [r7, #6]
 80006d6:	2b01      	cmp	r3, #1
 80006d8:	d133      	bne.n	8000742 <GPIO_IRQInterruptConfig+0x7e>
	{
		if(IRQNumber <= 31)
 80006da:	79fb      	ldrb	r3, [r7, #7]
 80006dc:	2b1f      	cmp	r3, #31
 80006de:	d80a      	bhi.n	80006f6 <GPIO_IRQInterruptConfig+0x32>
		{
			//program ISER0 register
			NVIC_ISER0 |= ( 1 << IRQNumber );
 80006e0:	4b34      	ldr	r3, [pc, #208]	; (80007b4 <GPIO_IRQInterruptConfig+0xf0>)
 80006e2:	681b      	ldr	r3, [r3, #0]
 80006e4:	79fa      	ldrb	r2, [r7, #7]
 80006e6:	2101      	movs	r1, #1
 80006e8:	fa01 f202 	lsl.w	r2, r1, r2
 80006ec:	4611      	mov	r1, r2
 80006ee:	4a31      	ldr	r2, [pc, #196]	; (80007b4 <GPIO_IRQInterruptConfig+0xf0>)
 80006f0:	430b      	orrs	r3, r1
 80006f2:	6013      	str	r3, [r2, #0]
			NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
		}
	}


}
 80006f4:	e059      	b.n	80007aa <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64 ) //32 to 63
 80006f6:	79fb      	ldrb	r3, [r7, #7]
 80006f8:	2b1f      	cmp	r3, #31
 80006fa:	d90f      	bls.n	800071c <GPIO_IRQInterruptConfig+0x58>
 80006fc:	79fb      	ldrb	r3, [r7, #7]
 80006fe:	2b3f      	cmp	r3, #63	; 0x3f
 8000700:	d80c      	bhi.n	800071c <GPIO_IRQInterruptConfig+0x58>
			NVIC_ISER1 |= ( 1 << (IRQNumber % 32) );
 8000702:	4b2d      	ldr	r3, [pc, #180]	; (80007b8 <GPIO_IRQInterruptConfig+0xf4>)
 8000704:	681b      	ldr	r3, [r3, #0]
 8000706:	79fa      	ldrb	r2, [r7, #7]
 8000708:	f002 021f 	and.w	r2, r2, #31
 800070c:	2101      	movs	r1, #1
 800070e:	fa01 f202 	lsl.w	r2, r1, r2
 8000712:	4611      	mov	r1, r2
 8000714:	4a28      	ldr	r2, [pc, #160]	; (80007b8 <GPIO_IRQInterruptConfig+0xf4>)
 8000716:	430b      	orrs	r3, r1
 8000718:	6013      	str	r3, [r2, #0]
 800071a:	e046      	b.n	80007aa <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96 )
 800071c:	79fb      	ldrb	r3, [r7, #7]
 800071e:	2b3f      	cmp	r3, #63	; 0x3f
 8000720:	d943      	bls.n	80007aa <GPIO_IRQInterruptConfig+0xe6>
 8000722:	79fb      	ldrb	r3, [r7, #7]
 8000724:	2b5f      	cmp	r3, #95	; 0x5f
 8000726:	d840      	bhi.n	80007aa <GPIO_IRQInterruptConfig+0xe6>
			NVIC_ISER2 |= ( 1 << (IRQNumber % 64) );
 8000728:	4b24      	ldr	r3, [pc, #144]	; (80007bc <GPIO_IRQInterruptConfig+0xf8>)
 800072a:	681b      	ldr	r3, [r3, #0]
 800072c:	79fa      	ldrb	r2, [r7, #7]
 800072e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000732:	2101      	movs	r1, #1
 8000734:	fa01 f202 	lsl.w	r2, r1, r2
 8000738:	4611      	mov	r1, r2
 800073a:	4a20      	ldr	r2, [pc, #128]	; (80007bc <GPIO_IRQInterruptConfig+0xf8>)
 800073c:	430b      	orrs	r3, r1
 800073e:	6013      	str	r3, [r2, #0]
}
 8000740:	e033      	b.n	80007aa <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <= 31)
 8000742:	79fb      	ldrb	r3, [r7, #7]
 8000744:	2b1f      	cmp	r3, #31
 8000746:	d80a      	bhi.n	800075e <GPIO_IRQInterruptConfig+0x9a>
			NVIC_ICER0 |= ( 1 << IRQNumber );
 8000748:	4b1d      	ldr	r3, [pc, #116]	; (80007c0 <GPIO_IRQInterruptConfig+0xfc>)
 800074a:	681b      	ldr	r3, [r3, #0]
 800074c:	79fa      	ldrb	r2, [r7, #7]
 800074e:	2101      	movs	r1, #1
 8000750:	fa01 f202 	lsl.w	r2, r1, r2
 8000754:	4611      	mov	r1, r2
 8000756:	4a1a      	ldr	r2, [pc, #104]	; (80007c0 <GPIO_IRQInterruptConfig+0xfc>)
 8000758:	430b      	orrs	r3, r1
 800075a:	6013      	str	r3, [r2, #0]
}
 800075c:	e025      	b.n	80007aa <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64 )
 800075e:	79fb      	ldrb	r3, [r7, #7]
 8000760:	2b1f      	cmp	r3, #31
 8000762:	d90f      	bls.n	8000784 <GPIO_IRQInterruptConfig+0xc0>
 8000764:	79fb      	ldrb	r3, [r7, #7]
 8000766:	2b3f      	cmp	r3, #63	; 0x3f
 8000768:	d80c      	bhi.n	8000784 <GPIO_IRQInterruptConfig+0xc0>
			NVIC_ICER1 |= ( 1 << (IRQNumber % 32) );
 800076a:	4b16      	ldr	r3, [pc, #88]	; (80007c4 <GPIO_IRQInterruptConfig+0x100>)
 800076c:	681b      	ldr	r3, [r3, #0]
 800076e:	79fa      	ldrb	r2, [r7, #7]
 8000770:	f002 021f 	and.w	r2, r2, #31
 8000774:	2101      	movs	r1, #1
 8000776:	fa01 f202 	lsl.w	r2, r1, r2
 800077a:	4611      	mov	r1, r2
 800077c:	4a11      	ldr	r2, [pc, #68]	; (80007c4 <GPIO_IRQInterruptConfig+0x100>)
 800077e:	430b      	orrs	r3, r1
 8000780:	6013      	str	r3, [r2, #0]
 8000782:	e012      	b.n	80007aa <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96 )
 8000784:	79fb      	ldrb	r3, [r7, #7]
 8000786:	2b3f      	cmp	r3, #63	; 0x3f
 8000788:	d90f      	bls.n	80007aa <GPIO_IRQInterruptConfig+0xe6>
 800078a:	79fb      	ldrb	r3, [r7, #7]
 800078c:	2b5f      	cmp	r3, #95	; 0x5f
 800078e:	d80c      	bhi.n	80007aa <GPIO_IRQInterruptConfig+0xe6>
			NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
 8000790:	4b0d      	ldr	r3, [pc, #52]	; (80007c8 <GPIO_IRQInterruptConfig+0x104>)
 8000792:	681b      	ldr	r3, [r3, #0]
 8000794:	79fa      	ldrb	r2, [r7, #7]
 8000796:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800079a:	2101      	movs	r1, #1
 800079c:	fa01 f202 	lsl.w	r2, r1, r2
 80007a0:	4611      	mov	r1, r2
 80007a2:	4a09      	ldr	r2, [pc, #36]	; (80007c8 <GPIO_IRQInterruptConfig+0x104>)
 80007a4:	430b      	orrs	r3, r1
 80007a6:	6013      	str	r3, [r2, #0]
}
 80007a8:	e7ff      	b.n	80007aa <GPIO_IRQInterruptConfig+0xe6>
 80007aa:	bf00      	nop
 80007ac:	370c      	adds	r7, #12
 80007ae:	46bd      	mov	sp, r7
 80007b0:	bc80      	pop	{r7}
 80007b2:	4770      	bx	lr
 80007b4:	e000e100 	.word	0xe000e100
 80007b8:	e000e104 	.word	0xe000e104
 80007bc:	e000e108 	.word	0xe000e108
 80007c0:	e000e180 	.word	0xe000e180
 80007c4:	e000e184 	.word	0xe000e184
 80007c8:	e000e188 	.word	0xe000e188

080007cc <GPIO_IRQHandling>:

void GPIO_IRQHandling(uint8_t PinNumber)
{
 80007cc:	b480      	push	{r7}
 80007ce:	b083      	sub	sp, #12
 80007d0:	af00      	add	r7, sp, #0
 80007d2:	4603      	mov	r3, r0
 80007d4:	71fb      	strb	r3, [r7, #7]
	//clear the exti pr register corresponding to the pin number
	if(EXTI->PR & ( 1 << PinNumber))
 80007d6:	4b0c      	ldr	r3, [pc, #48]	; (8000808 <GPIO_IRQHandling+0x3c>)
 80007d8:	695b      	ldr	r3, [r3, #20]
 80007da:	79fa      	ldrb	r2, [r7, #7]
 80007dc:	2101      	movs	r1, #1
 80007de:	fa01 f202 	lsl.w	r2, r1, r2
 80007e2:	4013      	ands	r3, r2
 80007e4:	2b00      	cmp	r3, #0
 80007e6:	d009      	beq.n	80007fc <GPIO_IRQHandling+0x30>
	{
		//clear
		EXTI->PR |= ( 1 << PinNumber);
 80007e8:	4b07      	ldr	r3, [pc, #28]	; (8000808 <GPIO_IRQHandling+0x3c>)
 80007ea:	695b      	ldr	r3, [r3, #20]
 80007ec:	79fa      	ldrb	r2, [r7, #7]
 80007ee:	2101      	movs	r1, #1
 80007f0:	fa01 f202 	lsl.w	r2, r1, r2
 80007f4:	4611      	mov	r1, r2
 80007f6:	4a04      	ldr	r2, [pc, #16]	; (8000808 <GPIO_IRQHandling+0x3c>)
 80007f8:	430b      	orrs	r3, r1
 80007fa:	6153      	str	r3, [r2, #20]
	}

}
 80007fc:	bf00      	nop
 80007fe:	370c      	adds	r7, #12
 8000800:	46bd      	mov	sp, r7
 8000802:	bc80      	pop	{r7}
 8000804:	4770      	bx	lr
 8000806:	bf00      	nop
 8000808:	40013c00 	.word	0x40013c00

0800080c <Delay>:
void Delay(int value){
 800080c:	b480      	push	{r7}
 800080e:	b085      	sub	sp, #20
 8000810:	af00      	add	r7, sp, #0
 8000812:	6078      	str	r0, [r7, #4]
	for (uint32_t i = 0; i < (500000/2*value); ++i) {};
 8000814:	2300      	movs	r3, #0
 8000816:	60fb      	str	r3, [r7, #12]
 8000818:	e002      	b.n	8000820 <Delay+0x14>
 800081a:	68fb      	ldr	r3, [r7, #12]
 800081c:	3301      	adds	r3, #1
 800081e:	60fb      	str	r3, [r7, #12]
 8000820:	687b      	ldr	r3, [r7, #4]
 8000822:	4a06      	ldr	r2, [pc, #24]	; (800083c <Delay+0x30>)
 8000824:	fb02 f303 	mul.w	r3, r2, r3
 8000828:	461a      	mov	r2, r3
 800082a:	68fb      	ldr	r3, [r7, #12]
 800082c:	4293      	cmp	r3, r2
 800082e:	d3f4      	bcc.n	800081a <Delay+0xe>
}
 8000830:	bf00      	nop
 8000832:	bf00      	nop
 8000834:	3714      	adds	r7, #20
 8000836:	46bd      	mov	sp, r7
 8000838:	bc80      	pop	{r7}
 800083a:	4770      	bx	lr
 800083c:	0003d090 	.word	0x0003d090

08000840 <main>:
#define BTN_PRESSED LOW



int main(void)
{
 8000840:	b580      	push	{r7, lr}
 8000842:	b08c      	sub	sp, #48	; 0x30
 8000844:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed, GpioLed1,GpioLed2,GPIOBtn;

	memset(&GpioLed,0,sizeof(GpioLed));
 8000846:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800084a:	220c      	movs	r2, #12
 800084c:	2100      	movs	r1, #0
 800084e:	4618      	mov	r0, r3
 8000850:	f000 f90c 	bl	8000a6c <memset>
	memset(&GpioLed1,0,sizeof(GpioLed));
 8000854:	f107 0318 	add.w	r3, r7, #24
 8000858:	220c      	movs	r2, #12
 800085a:	2100      	movs	r1, #0
 800085c:	4618      	mov	r0, r3
 800085e:	f000 f905 	bl	8000a6c <memset>
	memset(&GpioLed2,0,sizeof(GpioLed));
 8000862:	f107 030c 	add.w	r3, r7, #12
 8000866:	220c      	movs	r2, #12
 8000868:	2100      	movs	r1, #0
 800086a:	4618      	mov	r0, r3
 800086c:	f000 f8fe 	bl	8000a6c <memset>

	memset(&GPIOBtn,0,sizeof(GpioLed));
 8000870:	463b      	mov	r3, r7
 8000872:	220c      	movs	r2, #12
 8000874:	2100      	movs	r1, #0
 8000876:	4618      	mov	r0, r3
 8000878:	f000 f8f8 	bl	8000a6c <memset>

	//this is led gpio configuration
	GpioLed.pGPIOx = GPIOD;
 800087c:	4b32      	ldr	r3, [pc, #200]	; (8000948 <main+0x108>)
 800087e:	627b      	str	r3, [r7, #36]	; 0x24
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_15;
 8000880:	230f      	movs	r3, #15
 8000882:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000886:	2301      	movs	r3, #1
 8000888:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 800088c:	2300      	movs	r3, #0
 800088e:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000892:	2300      	movs	r3, #0
 8000894:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000898:	2300      	movs	r3, #0
 800089a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b

	GPIO_Pclk_Ctrl(GPIOD,ENABLE);
 800089e:	2101      	movs	r1, #1
 80008a0:	4829      	ldr	r0, [pc, #164]	; (8000948 <main+0x108>)
 80008a2:	f7ff fca1 	bl	80001e8 <GPIO_Pclk_Ctrl>

	GPIO_Init(&GpioLed);
 80008a6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80008aa:	4618      	mov	r0, r3
 80008ac:	f7ff fd20 	bl	80002f0 <GPIO_Init>

	GpioLed1.pGPIOx = GPIOD;
 80008b0:	4b25      	ldr	r3, [pc, #148]	; (8000948 <main+0x108>)
 80008b2:	61bb      	str	r3, [r7, #24]
	GpioLed1.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_14;
 80008b4:	230e      	movs	r3, #14
 80008b6:	773b      	strb	r3, [r7, #28]
	GpioLed1.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80008b8:	2301      	movs	r3, #1
 80008ba:	777b      	strb	r3, [r7, #29]
	GpioLed1.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 80008bc:	2300      	movs	r3, #0
 80008be:	77bb      	strb	r3, [r7, #30]
	GpioLed1.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80008c0:	2300      	movs	r3, #0
 80008c2:	f887 3020 	strb.w	r3, [r7, #32]
	GpioLed1.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80008c6:	2300      	movs	r3, #0
 80008c8:	77fb      	strb	r3, [r7, #31]

	GPIO_Pclk_Ctrl(GPIOD,ENABLE);
 80008ca:	2101      	movs	r1, #1
 80008cc:	481e      	ldr	r0, [pc, #120]	; (8000948 <main+0x108>)
 80008ce:	f7ff fc8b 	bl	80001e8 <GPIO_Pclk_Ctrl>

	GPIO_Init(&GpioLed1);
 80008d2:	f107 0318 	add.w	r3, r7, #24
 80008d6:	4618      	mov	r0, r3
 80008d8:	f7ff fd0a 	bl	80002f0 <GPIO_Init>

	GpioLed2.pGPIOx = GPIOD;
 80008dc:	4b1a      	ldr	r3, [pc, #104]	; (8000948 <main+0x108>)
 80008de:	60fb      	str	r3, [r7, #12]
	GpioLed2.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 80008e0:	230d      	movs	r3, #13
 80008e2:	743b      	strb	r3, [r7, #16]
	GpioLed2.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80008e4:	2301      	movs	r3, #1
 80008e6:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 80008e8:	2300      	movs	r3, #0
 80008ea:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
	GpioLed2.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80008ee:	2300      	movs	r3, #0
 80008f0:	753b      	strb	r3, [r7, #20]
	GpioLed2.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80008f2:	2300      	movs	r3, #0
 80008f4:	74fb      	strb	r3, [r7, #19]

	GPIO_Pclk_Ctrl(GPIOD,ENABLE);
 80008f6:	2101      	movs	r1, #1
 80008f8:	4813      	ldr	r0, [pc, #76]	; (8000948 <main+0x108>)
 80008fa:	f7ff fc75 	bl	80001e8 <GPIO_Pclk_Ctrl>

	GPIO_Init(&GpioLed2);
 80008fe:	f107 030c 	add.w	r3, r7, #12
 8000902:	4618      	mov	r0, r3
 8000904:	f7ff fcf4 	bl	80002f0 <GPIO_Init>


	//this is btn gpio configuration
	GPIOBtn.pGPIOx = GPIOA;
 8000908:	4b10      	ldr	r3, [pc, #64]	; (800094c <main+0x10c>)
 800090a:	603b      	str	r3, [r7, #0]
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 800090c:	2300      	movs	r3, #0
 800090e:	713b      	strb	r3, [r7, #4]
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_RT;
 8000910:	2305      	movs	r3, #5
 8000912:	717b      	strb	r3, [r7, #5]
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000914:	2302      	movs	r3, #2
 8000916:	71bb      	strb	r3, [r7, #6]
	GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000918:	2300      	movs	r3, #0
 800091a:	71fb      	strb	r3, [r7, #7]

	GPIO_Pclk_Ctrl(GPIOA,ENABLE);
 800091c:	2101      	movs	r1, #1
 800091e:	480b      	ldr	r0, [pc, #44]	; (800094c <main+0x10c>)
 8000920:	f7ff fc62 	bl	80001e8 <GPIO_Pclk_Ctrl>

	GPIO_Init(&GPIOBtn);
 8000924:	463b      	mov	r3, r7
 8000926:	4618      	mov	r0, r3
 8000928:	f7ff fce2 	bl	80002f0 <GPIO_Init>


	//IRQ configurations
	GPIO_IRQPriorityConfig(IRQ_NO_EXTI0,15);
 800092c:	210f      	movs	r1, #15
 800092e:	2006      	movs	r0, #6
 8000930:	f7ff fe9e 	bl	8000670 <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI0,ENABLE);
 8000934:	2101      	movs	r1, #1
 8000936:	2006      	movs	r0, #6
 8000938:	f7ff fec4 	bl	80006c4 <GPIO_IRQInterruptConfig>

    while(1){

    GPIO_Write_Output_Pin(GPIOD,GPIO_PIN_NO_15,GPIO_SET);
 800093c:	2201      	movs	r2, #1
 800093e:	210f      	movs	r1, #15
 8000940:	4801      	ldr	r0, [pc, #4]	; (8000948 <main+0x108>)
 8000942:	f7ff fe71 	bl	8000628 <GPIO_Write_Output_Pin>
 8000946:	e7f9      	b.n	800093c <main+0xfc>
 8000948:	40020c00 	.word	0x40020c00
 800094c:	40020000 	.word	0x40020000

08000950 <EXTI0_IRQHandler>:

}


void EXTI0_IRQHandler(void)
{
 8000950:	b580      	push	{r7, lr}
 8000952:	af00      	add	r7, sp, #0
	GPIO_Write_Output_Pin(GPIOD,GPIO_PIN_NO_15,GPIO_RESET);
 8000954:	2200      	movs	r2, #0
 8000956:	210f      	movs	r1, #15
 8000958:	481c      	ldr	r0, [pc, #112]	; (80009cc <EXTI0_IRQHandler+0x7c>)
 800095a:	f7ff fe65 	bl	8000628 <GPIO_Write_Output_Pin>

	GPIO_Write_Output_Pin(GPIOD,GPIO_PIN_NO_14,GPIO_SET);
 800095e:	2201      	movs	r2, #1
 8000960:	210e      	movs	r1, #14
 8000962:	481a      	ldr	r0, [pc, #104]	; (80009cc <EXTI0_IRQHandler+0x7c>)
 8000964:	f7ff fe60 	bl	8000628 <GPIO_Write_Output_Pin>
	GPIO_Write_Output_Pin(GPIOD,GPIO_PIN_NO_13,GPIO_SET);
 8000968:	2201      	movs	r2, #1
 800096a:	210d      	movs	r1, #13
 800096c:	4817      	ldr	r0, [pc, #92]	; (80009cc <EXTI0_IRQHandler+0x7c>)
 800096e:	f7ff fe5b 	bl	8000628 <GPIO_Write_Output_Pin>
	Delay(2); //200ms . wait till button de-bouncing gets over
 8000972:	2002      	movs	r0, #2
 8000974:	f7ff ff4a 	bl	800080c <Delay>
	GPIO_Write_Output_Pin(GPIOD,GPIO_PIN_NO_14,GPIO_RESET);
 8000978:	2200      	movs	r2, #0
 800097a:	210e      	movs	r1, #14
 800097c:	4813      	ldr	r0, [pc, #76]	; (80009cc <EXTI0_IRQHandler+0x7c>)
 800097e:	f7ff fe53 	bl	8000628 <GPIO_Write_Output_Pin>
	GPIO_Write_Output_Pin(GPIOD,GPIO_PIN_NO_13,GPIO_RESET);
 8000982:	2200      	movs	r2, #0
 8000984:	210d      	movs	r1, #13
 8000986:	4811      	ldr	r0, [pc, #68]	; (80009cc <EXTI0_IRQHandler+0x7c>)
 8000988:	f7ff fe4e 	bl	8000628 <GPIO_Write_Output_Pin>
	Delay(2);
 800098c:	2002      	movs	r0, #2
 800098e:	f7ff ff3d 	bl	800080c <Delay>
	GPIO_Write_Output_Pin(GPIOD,GPIO_PIN_NO_14,GPIO_SET);
 8000992:	2201      	movs	r2, #1
 8000994:	210e      	movs	r1, #14
 8000996:	480d      	ldr	r0, [pc, #52]	; (80009cc <EXTI0_IRQHandler+0x7c>)
 8000998:	f7ff fe46 	bl	8000628 <GPIO_Write_Output_Pin>
	GPIO_Write_Output_Pin(GPIOD,GPIO_PIN_NO_13,GPIO_SET);
 800099c:	2201      	movs	r2, #1
 800099e:	210d      	movs	r1, #13
 80009a0:	480a      	ldr	r0, [pc, #40]	; (80009cc <EXTI0_IRQHandler+0x7c>)
 80009a2:	f7ff fe41 	bl	8000628 <GPIO_Write_Output_Pin>
	Delay(2); //200ms . wait till button de-bouncing gets over
 80009a6:	2002      	movs	r0, #2
 80009a8:	f7ff ff30 	bl	800080c <Delay>
	GPIO_Write_Output_Pin(GPIOD,GPIO_PIN_NO_14,GPIO_RESET);
 80009ac:	2200      	movs	r2, #0
 80009ae:	210e      	movs	r1, #14
 80009b0:	4806      	ldr	r0, [pc, #24]	; (80009cc <EXTI0_IRQHandler+0x7c>)
 80009b2:	f7ff fe39 	bl	8000628 <GPIO_Write_Output_Pin>
	GPIO_Write_Output_Pin(GPIOD,GPIO_PIN_NO_13,GPIO_RESET);
 80009b6:	2200      	movs	r2, #0
 80009b8:	210d      	movs	r1, #13
 80009ba:	4804      	ldr	r0, [pc, #16]	; (80009cc <EXTI0_IRQHandler+0x7c>)
 80009bc:	f7ff fe34 	bl	8000628 <GPIO_Write_Output_Pin>
	GPIO_IRQHandling(GPIO_PIN_NO_0); //clear the pending event from exti line
 80009c0:	2000      	movs	r0, #0
 80009c2:	f7ff ff03 	bl	80007cc <GPIO_IRQHandling>
}
 80009c6:	bf00      	nop
 80009c8:	bd80      	pop	{r7, pc}
 80009ca:	bf00      	nop
 80009cc:	40020c00 	.word	0x40020c00

080009d0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80009d0:	480d      	ldr	r0, [pc, #52]	; (8000a08 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80009d2:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80009d4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80009d8:	480c      	ldr	r0, [pc, #48]	; (8000a0c <LoopForever+0x6>)
  ldr r1, =_edata
 80009da:	490d      	ldr	r1, [pc, #52]	; (8000a10 <LoopForever+0xa>)
  ldr r2, =_sidata
 80009dc:	4a0d      	ldr	r2, [pc, #52]	; (8000a14 <LoopForever+0xe>)
  movs r3, #0
 80009de:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80009e0:	e002      	b.n	80009e8 <LoopCopyDataInit>

080009e2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80009e2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80009e4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80009e6:	3304      	adds	r3, #4

080009e8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80009e8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80009ea:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80009ec:	d3f9      	bcc.n	80009e2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80009ee:	4a0a      	ldr	r2, [pc, #40]	; (8000a18 <LoopForever+0x12>)
  ldr r4, =_ebss
 80009f0:	4c0a      	ldr	r4, [pc, #40]	; (8000a1c <LoopForever+0x16>)
  movs r3, #0
 80009f2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80009f4:	e001      	b.n	80009fa <LoopFillZerobss>

080009f6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80009f6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80009f8:	3204      	adds	r2, #4

080009fa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80009fa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80009fc:	d3fb      	bcc.n	80009f6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80009fe:	f000 f811 	bl	8000a24 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000a02:	f7ff ff1d 	bl	8000840 <main>

08000a06 <LoopForever>:

LoopForever:
    b LoopForever
 8000a06:	e7fe      	b.n	8000a06 <LoopForever>
  ldr   r0, =_estack
 8000a08:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000a0c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000a10:	2000042c 	.word	0x2000042c
  ldr r2, =_sidata
 8000a14:	08000b70 	.word	0x08000b70
  ldr r2, =_sbss
 8000a18:	2000042c 	.word	0x2000042c
  ldr r4, =_ebss
 8000a1c:	20000454 	.word	0x20000454

08000a20 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000a20:	e7fe      	b.n	8000a20 <ADC_IRQHandler>
	...

08000a24 <__libc_init_array>:
 8000a24:	b570      	push	{r4, r5, r6, lr}
 8000a26:	4d0d      	ldr	r5, [pc, #52]	; (8000a5c <__libc_init_array+0x38>)
 8000a28:	4c0d      	ldr	r4, [pc, #52]	; (8000a60 <__libc_init_array+0x3c>)
 8000a2a:	1b64      	subs	r4, r4, r5
 8000a2c:	10a4      	asrs	r4, r4, #2
 8000a2e:	2600      	movs	r6, #0
 8000a30:	42a6      	cmp	r6, r4
 8000a32:	d109      	bne.n	8000a48 <__libc_init_array+0x24>
 8000a34:	4d0b      	ldr	r5, [pc, #44]	; (8000a64 <__libc_init_array+0x40>)
 8000a36:	4c0c      	ldr	r4, [pc, #48]	; (8000a68 <__libc_init_array+0x44>)
 8000a38:	f000 f886 	bl	8000b48 <_init>
 8000a3c:	1b64      	subs	r4, r4, r5
 8000a3e:	10a4      	asrs	r4, r4, #2
 8000a40:	2600      	movs	r6, #0
 8000a42:	42a6      	cmp	r6, r4
 8000a44:	d105      	bne.n	8000a52 <__libc_init_array+0x2e>
 8000a46:	bd70      	pop	{r4, r5, r6, pc}
 8000a48:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a4c:	4798      	blx	r3
 8000a4e:	3601      	adds	r6, #1
 8000a50:	e7ee      	b.n	8000a30 <__libc_init_array+0xc>
 8000a52:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a56:	4798      	blx	r3
 8000a58:	3601      	adds	r6, #1
 8000a5a:	e7f2      	b.n	8000a42 <__libc_init_array+0x1e>
 8000a5c:	08000b64 	.word	0x08000b64
 8000a60:	08000b64 	.word	0x08000b64
 8000a64:	08000b64 	.word	0x08000b64
 8000a68:	08000b6c 	.word	0x08000b6c

08000a6c <memset>:
 8000a6c:	4402      	add	r2, r0
 8000a6e:	4603      	mov	r3, r0
 8000a70:	4293      	cmp	r3, r2
 8000a72:	d100      	bne.n	8000a76 <memset+0xa>
 8000a74:	4770      	bx	lr
 8000a76:	f803 1b01 	strb.w	r1, [r3], #1
 8000a7a:	e7f9      	b.n	8000a70 <memset+0x4>

08000a7c <register_fini>:
 8000a7c:	4b02      	ldr	r3, [pc, #8]	; (8000a88 <register_fini+0xc>)
 8000a7e:	b113      	cbz	r3, 8000a86 <register_fini+0xa>
 8000a80:	4802      	ldr	r0, [pc, #8]	; (8000a8c <register_fini+0x10>)
 8000a82:	f000 b805 	b.w	8000a90 <atexit>
 8000a86:	4770      	bx	lr
 8000a88:	00000000 	.word	0x00000000
 8000a8c:	08000a9d 	.word	0x08000a9d

08000a90 <atexit>:
 8000a90:	2300      	movs	r3, #0
 8000a92:	4601      	mov	r1, r0
 8000a94:	461a      	mov	r2, r3
 8000a96:	4618      	mov	r0, r3
 8000a98:	f000 b816 	b.w	8000ac8 <__register_exitproc>

08000a9c <__libc_fini_array>:
 8000a9c:	b538      	push	{r3, r4, r5, lr}
 8000a9e:	4d07      	ldr	r5, [pc, #28]	; (8000abc <__libc_fini_array+0x20>)
 8000aa0:	4c07      	ldr	r4, [pc, #28]	; (8000ac0 <__libc_fini_array+0x24>)
 8000aa2:	1b64      	subs	r4, r4, r5
 8000aa4:	10a4      	asrs	r4, r4, #2
 8000aa6:	b91c      	cbnz	r4, 8000ab0 <__libc_fini_array+0x14>
 8000aa8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000aac:	f000 b852 	b.w	8000b54 <_fini>
 8000ab0:	3c01      	subs	r4, #1
 8000ab2:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8000ab6:	4798      	blx	r3
 8000ab8:	e7f5      	b.n	8000aa6 <__libc_fini_array+0xa>
 8000aba:	bf00      	nop
 8000abc:	08000b6c 	.word	0x08000b6c
 8000ac0:	08000b70 	.word	0x08000b70

08000ac4 <__retarget_lock_acquire_recursive>:
 8000ac4:	4770      	bx	lr

08000ac6 <__retarget_lock_release_recursive>:
 8000ac6:	4770      	bx	lr

08000ac8 <__register_exitproc>:
 8000ac8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000acc:	4d1c      	ldr	r5, [pc, #112]	; (8000b40 <__register_exitproc+0x78>)
 8000ace:	4606      	mov	r6, r0
 8000ad0:	6828      	ldr	r0, [r5, #0]
 8000ad2:	4698      	mov	r8, r3
 8000ad4:	460f      	mov	r7, r1
 8000ad6:	4691      	mov	r9, r2
 8000ad8:	f7ff fff4 	bl	8000ac4 <__retarget_lock_acquire_recursive>
 8000adc:	4b19      	ldr	r3, [pc, #100]	; (8000b44 <__register_exitproc+0x7c>)
 8000ade:	681b      	ldr	r3, [r3, #0]
 8000ae0:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
 8000ae4:	4628      	mov	r0, r5
 8000ae6:	b91c      	cbnz	r4, 8000af0 <__register_exitproc+0x28>
 8000ae8:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
 8000aec:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
 8000af0:	6865      	ldr	r5, [r4, #4]
 8000af2:	6800      	ldr	r0, [r0, #0]
 8000af4:	2d1f      	cmp	r5, #31
 8000af6:	dd05      	ble.n	8000b04 <__register_exitproc+0x3c>
 8000af8:	f7ff ffe5 	bl	8000ac6 <__retarget_lock_release_recursive>
 8000afc:	f04f 30ff 	mov.w	r0, #4294967295
 8000b00:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b04:	b19e      	cbz	r6, 8000b2e <__register_exitproc+0x66>
 8000b06:	eb04 0185 	add.w	r1, r4, r5, lsl #2
 8000b0a:	2201      	movs	r2, #1
 8000b0c:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
 8000b10:	f8d4 3188 	ldr.w	r3, [r4, #392]	; 0x188
 8000b14:	40aa      	lsls	r2, r5
 8000b16:	4313      	orrs	r3, r2
 8000b18:	2e02      	cmp	r6, #2
 8000b1a:	f8c4 3188 	str.w	r3, [r4, #392]	; 0x188
 8000b1e:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
 8000b22:	bf02      	ittt	eq
 8000b24:	f8d4 318c 	ldreq.w	r3, [r4, #396]	; 0x18c
 8000b28:	431a      	orreq	r2, r3
 8000b2a:	f8c4 218c 	streq.w	r2, [r4, #396]	; 0x18c
 8000b2e:	1c6b      	adds	r3, r5, #1
 8000b30:	3502      	adds	r5, #2
 8000b32:	6063      	str	r3, [r4, #4]
 8000b34:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
 8000b38:	f7ff ffc5 	bl	8000ac6 <__retarget_lock_release_recursive>
 8000b3c:	2000      	movs	r0, #0
 8000b3e:	e7df      	b.n	8000b00 <__register_exitproc+0x38>
 8000b40:	20000428 	.word	0x20000428
 8000b44:	08000b60 	.word	0x08000b60

08000b48 <_init>:
 8000b48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b4a:	bf00      	nop
 8000b4c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b4e:	bc08      	pop	{r3}
 8000b50:	469e      	mov	lr, r3
 8000b52:	4770      	bx	lr

08000b54 <_fini>:
 8000b54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b56:	bf00      	nop
 8000b58:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b5a:	bc08      	pop	{r3}
 8000b5c:	469e      	mov	lr, r3
 8000b5e:	4770      	bx	lr
